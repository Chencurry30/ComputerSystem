worker_processes  1;

events {
    worker_connections  1024;
}

http {
    #配置相关站点 解决跨域
    include mime.types;
    #默认文件类型
    default_type application/octet-stream;

    sendfile        on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


   upstream myserver {
       # 策略默认是轮询 第二个是weight，默认值为1 第三个 ip_hash 第四个 fair（第三方）
       # 每个请求按照访问ip的hash结果分配，每个访客访问一个后端服务器，可以解决session问题,
       # ip_hash;
       #server 127.0.0.1:8989;
        server 127.0.0.1:8990;
        server 127.0.0.1:8991;
       #根据后端服务器的响应时间来分配请求，响应时间短的优先分配
       # fair;
    }

    server {
        listen       8080;
        server_name  localhost;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        location / {
            proxy_pass http://myserver;
            root  html/front/;
            index  index.html index.htm;
            try_files $uri $uri/ @router;
           #需要指向下面的@router否则会出现vue的路由在nginx中刷新出现404
        }
        #对应上面的@router，主要原因是路由的路径资源并不是一个真实的路径，所以无法找到具体的文件
        #因此需要rewrite到index.html中，然后交给路由在处理请求资源
        location @router {
            rewrite ^.*$ /index.html last;
        }
    }

    server {
        listen       8081;
        server_name  localhost;

        #charset koi8-r;
        #access_log  logs/host.access.log  main;

        location / {
            root  html/admin/;
            index  index.html index.htm;
            try_files $uri $uri/ @router;
           #需要指向下面的@router否则会出现vue的路由在nginx中刷新出现404
        }
        #对应上面的@router，主要原因是路由的路径资源并不是一个真实的路径，所以无法找到具体的文件
        #因此需要rewrite到index.html中，然后交给路由在处理请求资源
        location @router {
            rewrite ^.*$ /index.html last;
        }
    }

}