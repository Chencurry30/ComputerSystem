{"ast":null,"code":"import { int2char } from \"./util\";\nvar b64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar b64pad = \"=\";\nexport function hex2b64(h) {\n  var i;\n  var c;\n  var ret = \"\";\n\n  for (i = 0; i + 3 <= h.length; i += 3) {\n    c = parseInt(h.substring(i, i + 3), 16);\n    ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);\n  }\n\n  if (i + 1 == h.length) {\n    c = parseInt(h.substring(i, i + 1), 16);\n    ret += b64map.charAt(c << 2);\n  } else if (i + 2 == h.length) {\n    c = parseInt(h.substring(i, i + 2), 16);\n    ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);\n  }\n\n  while ((ret.length & 3) > 0) {\n    ret += b64pad;\n  }\n\n  return ret;\n} // convert a base64 string to hex\n\nexport function b64tohex(s) {\n  var ret = \"\";\n  var i;\n  var k = 0; // b64 state, 0-3\n\n  var slop = 0;\n\n  for (i = 0; i < s.length; ++i) {\n    if (s.charAt(i) == b64pad) {\n      break;\n    }\n\n    var v = b64map.indexOf(s.charAt(i));\n\n    if (v < 0) {\n      continue;\n    }\n\n    if (k == 0) {\n      ret += int2char(v >> 2);\n      slop = v & 3;\n      k = 1;\n    } else if (k == 1) {\n      ret += int2char(slop << 2 | v >> 4);\n      slop = v & 0xf;\n      k = 2;\n    } else if (k == 2) {\n      ret += int2char(slop);\n      ret += int2char(v >> 2);\n      slop = v & 3;\n      k = 3;\n    } else {\n      ret += int2char(slop << 2 | v >> 4);\n      ret += int2char(v & 0xf);\n      k = 0;\n    }\n  }\n\n  if (k == 1) {\n    ret += int2char(slop << 2);\n  }\n\n  return ret;\n} // convert a base64 string to a byte/number array\n\nexport function b64toBA(s) {\n  // piggyback on b64tohex for now, optimize later\n  var h = b64tohex(s);\n  var i;\n  var a = [];\n\n  for (i = 0; 2 * i < h.length; ++i) {\n    a[i] = parseInt(h.substring(2 * i, 2 * i + 2), 16);\n  }\n\n  return a;\n}","map":{"version":3,"names":["int2char","b64map","b64pad","hex2b64","h","i","c","ret","length","parseInt","substring","charAt","b64tohex","s","k","slop","v","indexOf","b64toBA","a"],"sources":["C:/Users/3HENRY/Desktop/web2/computer-system/src/frontend/node_modules/jsencrypt/lib/lib/jsbn/base64.js"],"sourcesContent":["import { int2char } from \"./util\";\nvar b64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar b64pad = \"=\";\nexport function hex2b64(h) {\n    var i;\n    var c;\n    var ret = \"\";\n    for (i = 0; i + 3 <= h.length; i += 3) {\n        c = parseInt(h.substring(i, i + 3), 16);\n        ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);\n    }\n    if (i + 1 == h.length) {\n        c = parseInt(h.substring(i, i + 1), 16);\n        ret += b64map.charAt(c << 2);\n    }\n    else if (i + 2 == h.length) {\n        c = parseInt(h.substring(i, i + 2), 16);\n        ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);\n    }\n    while ((ret.length & 3) > 0) {\n        ret += b64pad;\n    }\n    return ret;\n}\n// convert a base64 string to hex\nexport function b64tohex(s) {\n    var ret = \"\";\n    var i;\n    var k = 0; // b64 state, 0-3\n    var slop = 0;\n    for (i = 0; i < s.length; ++i) {\n        if (s.charAt(i) == b64pad) {\n            break;\n        }\n        var v = b64map.indexOf(s.charAt(i));\n        if (v < 0) {\n            continue;\n        }\n        if (k == 0) {\n            ret += int2char(v >> 2);\n            slop = v & 3;\n            k = 1;\n        }\n        else if (k == 1) {\n            ret += int2char((slop << 2) | (v >> 4));\n            slop = v & 0xf;\n            k = 2;\n        }\n        else if (k == 2) {\n            ret += int2char(slop);\n            ret += int2char(v >> 2);\n            slop = v & 3;\n            k = 3;\n        }\n        else {\n            ret += int2char((slop << 2) | (v >> 4));\n            ret += int2char(v & 0xf);\n            k = 0;\n        }\n    }\n    if (k == 1) {\n        ret += int2char(slop << 2);\n    }\n    return ret;\n}\n// convert a base64 string to a byte/number array\nexport function b64toBA(s) {\n    // piggyback on b64tohex for now, optimize later\n    var h = b64tohex(s);\n    var i;\n    var a = [];\n    for (i = 0; 2 * i < h.length; ++i) {\n        a[i] = parseInt(h.substring(2 * i, 2 * i + 2), 16);\n    }\n    return a;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}