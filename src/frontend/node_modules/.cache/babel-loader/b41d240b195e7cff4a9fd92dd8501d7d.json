{"ast":null,"code":"// prng4.js - uses Arcfour as a PRNG\nvar Arcfour =\n/** @class */\nfunction () {\n  function Arcfour() {\n    this.i = 0;\n    this.j = 0;\n    this.S = [];\n  } // Arcfour.prototype.init = ARC4init;\n  // Initialize arcfour context from key, an array of ints, each from [0..255]\n\n\n  Arcfour.prototype.init = function (key) {\n    var i;\n    var j;\n    var t;\n\n    for (i = 0; i < 256; ++i) {\n      this.S[i] = i;\n    }\n\n    j = 0;\n\n    for (i = 0; i < 256; ++i) {\n      j = j + this.S[i] + key[i % key.length] & 255;\n      t = this.S[i];\n      this.S[i] = this.S[j];\n      this.S[j] = t;\n    }\n\n    this.i = 0;\n    this.j = 0;\n  }; // Arcfour.prototype.next = ARC4next;\n\n\n  Arcfour.prototype.next = function () {\n    var t;\n    this.i = this.i + 1 & 255;\n    this.j = this.j + this.S[this.i] & 255;\n    t = this.S[this.i];\n    this.S[this.i] = this.S[this.j];\n    this.S[this.j] = t;\n    return this.S[t + this.S[this.i] & 255];\n  };\n\n  return Arcfour;\n}();\n\nexport { Arcfour }; // Plug in your RNG constructor here\n\nexport function prng_newstate() {\n  return new Arcfour();\n} // Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\n\nexport var rng_psize = 256;","map":{"version":3,"names":["Arcfour","i","j","S","prototype","init","key","t","length","next","prng_newstate","rng_psize"],"sources":["/Users/liguoqiang/Desktop/code/computer-system/src/frontend/node_modules/jsencrypt/lib/lib/jsbn/prng4.js"],"sourcesContent":["// prng4.js - uses Arcfour as a PRNG\nvar Arcfour = /** @class */ (function () {\n    function Arcfour() {\n        this.i = 0;\n        this.j = 0;\n        this.S = [];\n    }\n    // Arcfour.prototype.init = ARC4init;\n    // Initialize arcfour context from key, an array of ints, each from [0..255]\n    Arcfour.prototype.init = function (key) {\n        var i;\n        var j;\n        var t;\n        for (i = 0; i < 256; ++i) {\n            this.S[i] = i;\n        }\n        j = 0;\n        for (i = 0; i < 256; ++i) {\n            j = (j + this.S[i] + key[i % key.length]) & 255;\n            t = this.S[i];\n            this.S[i] = this.S[j];\n            this.S[j] = t;\n        }\n        this.i = 0;\n        this.j = 0;\n    };\n    // Arcfour.prototype.next = ARC4next;\n    Arcfour.prototype.next = function () {\n        var t;\n        this.i = (this.i + 1) & 255;\n        this.j = (this.j + this.S[this.i]) & 255;\n        t = this.S[this.i];\n        this.S[this.i] = this.S[this.j];\n        this.S[this.j] = t;\n        return this.S[(t + this.S[this.i]) & 255];\n    };\n    return Arcfour;\n}());\nexport { Arcfour };\n// Plug in your RNG constructor here\nexport function prng_newstate() {\n    return new Arcfour();\n}\n// Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\nexport var rng_psize = 256;\n"],"mappings":"AAAA;AACA,IAAIA,OAAO;AAAG;AAAe,YAAY;EACrC,SAASA,OAAT,GAAmB;IACf,KAAKC,CAAL,GAAS,CAAT;IACA,KAAKC,CAAL,GAAS,CAAT;IACA,KAAKC,CAAL,GAAS,EAAT;EACH,CALoC,CAMrC;EACA;;;EACAH,OAAO,CAACI,SAAR,CAAkBC,IAAlB,GAAyB,UAAUC,GAAV,EAAe;IACpC,IAAIL,CAAJ;IACA,IAAIC,CAAJ;IACA,IAAIK,CAAJ;;IACA,KAAKN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqB,EAAEA,CAAvB,EAA0B;MACtB,KAAKE,CAAL,CAAOF,CAAP,IAAYA,CAAZ;IACH;;IACDC,CAAC,GAAG,CAAJ;;IACA,KAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqB,EAAEA,CAAvB,EAA0B;MACtBC,CAAC,GAAIA,CAAC,GAAG,KAAKC,CAAL,CAAOF,CAAP,CAAJ,GAAgBK,GAAG,CAACL,CAAC,GAAGK,GAAG,CAACE,MAAT,CAApB,GAAwC,GAA5C;MACAD,CAAC,GAAG,KAAKJ,CAAL,CAAOF,CAAP,CAAJ;MACA,KAAKE,CAAL,CAAOF,CAAP,IAAY,KAAKE,CAAL,CAAOD,CAAP,CAAZ;MACA,KAAKC,CAAL,CAAOD,CAAP,IAAYK,CAAZ;IACH;;IACD,KAAKN,CAAL,GAAS,CAAT;IACA,KAAKC,CAAL,GAAS,CAAT;EACH,CAhBD,CARqC,CAyBrC;;;EACAF,OAAO,CAACI,SAAR,CAAkBK,IAAlB,GAAyB,YAAY;IACjC,IAAIF,CAAJ;IACA,KAAKN,CAAL,GAAU,KAAKA,CAAL,GAAS,CAAV,GAAe,GAAxB;IACA,KAAKC,CAAL,GAAU,KAAKA,CAAL,GAAS,KAAKC,CAAL,CAAO,KAAKF,CAAZ,CAAV,GAA4B,GAArC;IACAM,CAAC,GAAG,KAAKJ,CAAL,CAAO,KAAKF,CAAZ,CAAJ;IACA,KAAKE,CAAL,CAAO,KAAKF,CAAZ,IAAiB,KAAKE,CAAL,CAAO,KAAKD,CAAZ,CAAjB;IACA,KAAKC,CAAL,CAAO,KAAKD,CAAZ,IAAiBK,CAAjB;IACA,OAAO,KAAKJ,CAAL,CAAQI,CAAC,GAAG,KAAKJ,CAAL,CAAO,KAAKF,CAAZ,CAAL,GAAuB,GAA9B,CAAP;EACH,CARD;;EASA,OAAOD,OAAP;AACH,CApC4B,EAA7B;;AAqCA,SAASA,OAAT,G,CACA;;AACA,OAAO,SAASU,aAAT,GAAyB;EAC5B,OAAO,IAAIV,OAAJ,EAAP;AACH,C,CACD;AACA;;AACA,OAAO,IAAIW,SAAS,GAAG,GAAhB"},"metadata":{},"sourceType":"module"}