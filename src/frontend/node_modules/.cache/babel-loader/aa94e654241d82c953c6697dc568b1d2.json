{"ast":null,"code":"import Cookies from 'js-cookie';\nimport { userLogin } from '../../Servers/Server';\nimport { CryAlgorithm } from '../../utils'; //公钥加密函数\n\nimport { mapGetters } from 'vuex'; //获取公钥的相关配置\n\nimport rules from '../../utils/rules';\nexport default {\n  name: \"loginView\",\n\n  data() {\n    return {\n      automaticLogin: false,\n      //自动登录\n      showHiddenImg: false,\n      changeHiddenImg: false,\n      dataForm: {\n        username: '',\n        //账号\n        password: '' //密码\n\n      },\n      checkForm: {\n        //用户名校验\n        username: [{\n          validator: rules.FormValidate.Form().validateUserName,\n          trigger: 'blur'\n        }],\n        //密码校验\n        password: [{\n          validator: rules.FormValidate.Form().validatePassWord,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  computed: {\n    //判断提交\n    canSubmit() {\n      const {\n        username,\n        password\n      } = this.dataForm;\n      return Boolean(username && password);\n    },\n\n    //获取公钥的ID以及公钥的内容\n    ...mapGetters('encryption', {\n      getkeyInfo: 'getkeyInfo'\n    })\n  },\n  methods: {\n    //是否自动登录\n    submitLogin() {\n      this.automaticLogin = !this.automaticLogin;\n    },\n\n    //返回首页\n    backHome() {\n      let location = {\n        name: \"mainHome\"\n      };\n      this.$router.push(location);\n    },\n\n    //登录\n    goToLogin() {\n      let data = {};\n      data.uuId = this.getkeyInfo.uuId;\n      data.username = this.dataForm.username; // data.password = this.dataForm.password\n\n      data.password = CryAlgorithm(this.getkeyInfo.encryPtion, this.dataForm.password);\n      userLogin(data).then(res => {\n        console.log(res);\n        Cookies.set('name', this.dataForm.username);\n        const name = data.username;\n\n        if (res.data.code === 200) {\n          const token = res.data.data.token; // localStorage.setItem('username',res.data.data.user.nickname)\n\n          localStorage.setItem('token', token); //保存token到本地浏览器\n\n          this.$message({\n            message: \"恭喜你，登录成功！欢迎用户: \" + name,\n            type: \"success\"\n          });\n          this.$router.push({\n            name: 'mainHome'\n          });\n        } else if (res.data.code === 400) {\n          this.$message.error(\"用户名或密码错误，请重新输入！\");\n        }\n      });\n    },\n\n    //忘记密码\n    gotoretrieve() {\n      let location = {\n        name: \"mainHome\"\n      };\n      this.$router.push(location);\n    },\n\n    //获取焦点时显示图片\n    showImg() {\n      this.showHiddenImg = true;\n    },\n\n    //修改可以查看密码的图片样式\n    changeImg() {\n      console.log(this.changeHiddenImg);\n      this.changeHiddenImg = !this.changeHiddenImg;\n    }\n\n  },\n\n  mounted() {\n    this.$store.dispatch('encryption/getPubKey');\n  }\n\n};","map":{"version":3,"mappings":"AA+EA;AACA;AACA,2C,CAAA;;AACA,kC,CAAA;;AACA;AAEA;EACAA,iBADA;;EAEAC;IACA;MACAC,qBADA;MACA;MACAC,oBAFA;MAGAC,sBAHA;MAIAC;QACAC,YADA;QACA;QACAC,YAFA,CAEA;;MAFA,CAJA;MAQAC;QACA;QACAF,WACA;UAAAG;UAAAC;QAAA,CADA,CAFA;QAKA;QACAH,WACA;UAAAE;UAAAC;QAAA,CADA;MANA;IARA;EAmBA,CAtBA;;EAuBAC;IACA;IACAC;MACA;QAAAN;QAAAC;MAAA;MACA;IACA,CALA;;IAMA;IACA;MACAM;IADA;EAPA,CAvBA;EAkCAC;IACA;IACAC;MACA;IACA,CAJA;;IAKA;IACAC;MACA;QAAAhB;MAAA;MACA;IACA,CATA;;IAUA;IACAiB;MACA;MACAhB;MACAA,uCAHA,CAIA;;MACAA;MACAiB;QACAC;QACAC;QACA;;QACA;UACA,kCADA,CAEA;;UACAC,qCAHA,CAGA;;UACA;YACAC,iCADA;YAEAC;UAFA;UAIA;YAAAvB;UAAA;QACA,CATA,MASA;UACA;QACA;MACA,CAhBA;IAkBA,CAnCA;;IAoCA;IACAwB;MACA;QAAAxB;MAAA;MACA;IACA,CAxCA;;IAyCA;IACAyB;MACA;IACA,CA5CA;;IA6CA;IACAC;MACAP;MACA;IACA;;EAjDA,CAlCA;;EAqFAQ;IACA;EACA;;AAvFA","names":["name","data","automaticLogin","showHiddenImg","changeHiddenImg","dataForm","username","password","checkForm","validator","trigger","computed","canSubmit","getkeyInfo","methods","submitLogin","backHome","goToLogin","userLogin","console","Cookies","localStorage","message","type","gotoretrieve","showImg","changeImg","mounted"],"sourceRoot":"src/views/baseViews","sources":["loginView.vue"],"sourcesContent":["<template>\n  <div>\n    <vue-particles color=\"#e8f659\" :particleOpacity=\"0.7\" :particlesNumber=\"60\" shapeType=\"circle\" :particleSize=\"6\"\n      linesColor=\"#e8f659\" :linesWidth=\"1\" :lineLinked=\"true\" :lineOpacity=\"0.4\" :linesDistance=\"150\" :moveSpeed=\"3\"\n      :hoverEffect=\"true\" hoverMode=\"grab\" :clickEffect=\"true\" clickMode=\"push\">\n    </vue-particles>\n    <div class=\"login_container\">\n      <div class=\"login_box\">\n\n        <div class=\"avatar_box\">\n          <img src=\"../../assets/Img/LoginImg/tx.jpg\" alt=\"\" />\n        </div>\n\n        <el-form label-width=\"0px\" class=\"login_in\"  ref=\"dataForm\" :model=\"dataForm\" :rules=\"checkForm\">\n\n          <div class=\"form-info\">\n            <el-form-item prop=\"username\">\n              <el-input\n                type=\"text\"\n                prefix-icon=\"el-icon-user\"\n                placeholder=\"请输入账号\"\n                v-model.trim=\"dataForm.username\">\n              </el-input>\n            </el-form-item>\n\n\n            <el-form-item prop=\"password\">\n              <el-input\n                :type=\"changeHiddenImg === true ? 'text':'password'\"\n                prefix-icon=\"el-icon-thumb\"\n                placeholder=\"请输入密码\"\n                v-model.trim=\"dataForm.password\"\n                @focus=\"showImg\"\n              ></el-input>\n              <div class=\"clickImg\" v-show=\"showHiddenImg\" @click=\"changeImg\">\n                <div :class=\"changeHiddenImg === true ? 'showImg':'hiddenImg'\"></div>\n              </div>\n            </el-form-item>\n\n\n          </div>\n\n          <div class=\"tablenav\">\n            <div class=\"navleft\">\n              <div class=\"leftbtn\">\n                <div :class=\"automaticLogin === false ? 'dashDiv' : 'dashDivSelectd'\">\n                  <span class=\"dashSpan\" @click=\"submitLogin\"></span>\n                </div>\n                <div class=\"prompt\">自动登录</div>\n              </div>\n            </div>\n            <div class=\"navright\">\n              <div class=\"prompt\" @click=\"gotoretrieve\">忘记密码</div>\n            </div>\n          </div>\n\n          <el-form-item class=\"btns\">\n            <el-button type=\"primary\" @click=\"goToLogin\" :disabled=\"!canSubmit\">登&nbsp;&nbsp;&nbsp;&nbsp;录</el-button>\n          </el-form-item>\n\n          <div class=\"stytem\">\n            <div class=\"stytem-left\">\n              <div class=\"lefttitle\" @click=\"backHome()\">返回首页</div>\n            </div>\n            <div class=\"stytem-right\">\n              <div class=\"righttitle\">\n                <router-link :to=\"{ name: 'registerView' }\">用户注册</router-link>\n              </div>\n            </div>\n          </div>\n\n        </el-form>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport Cookies from 'js-cookie';\nimport { userLogin } from '../../Servers/Server';\nimport {CryAlgorithm} from '../../utils'  //公钥加密函数\nimport {mapGetters} from 'vuex'  //获取公钥的相关配置\nimport rules from '../../utils/rules'\n\nexport default {\n  name: \"loginView\",\n  data() {\n    return {\n      automaticLogin: false, //自动登录\n      showHiddenImg:false,\n      changeHiddenImg:false,\n      dataForm: {\n        username: '', //账号\n        password: '', //密码\n      },\n      checkForm:{\n        //用户名校验\n        username:[\n          {validator: rules.FormValidate.Form().validateUserName,trigger:'blur'}\n        ],\n        //密码校验\n        password:[\n          {validator: rules.FormValidate.Form().validatePassWord,trigger:'blur'}\n        ],\n      },\n    };\n  },\n  computed: {\n    //判断提交\n    canSubmit() {\n      const { username, password } = this.dataForm\n      return Boolean(username && password)\n    },\n    //获取公钥的ID以及公钥的内容\n    ...mapGetters('encryption',{\n      getkeyInfo:'getkeyInfo'\n    })\n  },\n  methods: {\n    //是否自动登录\n    submitLogin() {\n      this.automaticLogin = !this.automaticLogin;\n    },\n    //返回首页\n    backHome() {\n      let location = { name: \"mainHome\" };\n      this.$router.push(location);\n    },\n    //登录\n    goToLogin() {\n      let data = {}\n      data.uuId = this.getkeyInfo.uuId\n      data.username = this.dataForm.username\n      // data.password = this.dataForm.password\n      data.password = CryAlgorithm(this.getkeyInfo.encryPtion,this.dataForm.password)\n      userLogin(data).then(res => {\n        console.log(res);\n        Cookies.set('name', this.dataForm.username)\n        const name = data.username\n        if (res.data.code === 200) {\n        const token = res.data.data.token\n        // localStorage.setItem('username',res.data.data.user.nickname)\n        localStorage.setItem('token', token)  //保存token到本地浏览器\n          this.$message({\n            message: \"恭喜你，登录成功！欢迎用户: \" + name,\n            type: \"success\",\n          })\n          this.$router.push({ name: 'mainHome' })\n        }else if (res.data.code === 400) {\n          this.$message.error(\"用户名或密码错误，请重新输入！\")\n        }\n      })\n\n    },\n    //忘记密码\n    gotoretrieve(){\n      let location = { name: \"mainHome\" };\n      this.$router.push(location);\n    },\n    //获取焦点时显示图片\n    showImg(){\n      this.showHiddenImg = true\n    },\n    //修改可以查看密码的图片样式\n    changeImg(){\n      console.log(this.changeHiddenImg);\n      this.changeHiddenImg = !this.changeHiddenImg\n    }\n  },\n  mounted(){\n    this.$store.dispatch('encryption/getPubKey');\n  }\n};\n</script>\n\n<style scoped lang=\"less\">\n#particles-js {\n  width: 100%;\n  height: calc(100%);\n  position: absolute;\n  background-image: url(\"../../assets/Img/LoginImg/background.png\");\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n.login_container {\n  z-index: 55;\n  background-color: #42b983;\n  height: 100%;\n}\n.el-form-item {\n  margin-bottom: 20px;\n}\n.login_box {\n  width: 450px;\n  height: 300px;\n  border-radius: 3px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  .avatar_box {\n    height: 130px;\n    width: 130px;\n    border: 1px solid #eee;\n    border-radius: 50%;\n    box-shadow: 0 0 10px #ddd;\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #fff;\n    padding: 10px;\n\n    img {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: #eee;\n    }\n  }\n}\n.btns {\n  display: flex;\n  justify-content: space-between;\n}\n.login_in {\n    z-index: 999;\n    position: absolute;\n    bottom: -15px;\n    width: 100%;\n    padding: 0 20px;\n    box-sizing: border-box;\n\n\n  //选择方式\n  .navSelect {\n    display: flex;\n    justify-content: space-between;\n    color: #ffffff;\n    font-size: 18px;\n    font-family: \"楷体\";\n\n    .select-left {\n      position: relative;\n      margin-left: 50px;\n      cursor: pointer;\n\n      .btn-selected {\n        position: absolute;\n        width: 60px;\n        height: 2px;\n        bottom: -1px;\n        left: 9px;\n        background-color: #ffffff;\n      }\n    }\n\n    .select-right {\n      position: relative;\n      margin-right: 50px;\n      cursor: pointer;\n\n      .btn-selected {\n        position: absolute;\n        width: 60px;\n        height: 2px;\n        bottom: -1px;\n        right: 9px;\n        background-color: #ffffff;\n      }\n    }\n  }\n\n  .verification {\n\n    //验证码登录的输入框\n    .el-input {\n      width: 240px;\n    }\n\n    .getVerificationCode {\n      position: absolute;\n      width: 100px;\n      height: 40px;\n      top: 0px;\n      right: 20px;\n      border-radius: 4px;\n      text-align: center;\n      cursor: pointer;\n      color: #ffffff;\n      background-color: #409eff;\n    }\n  }\n\n  .tablenav {\n    display: flex;\n    justify-content: space-between;\n    font-family: \"楷体\";\n\n    .navleft {\n      margin-left: 30px;\n\n      .leftbtn {\n        display: flex;\n\n        //未选中状态\n        .dashDiv {\n          border-radius: 1.8667rem;\n          border: 0.03rem solid #cbcbcb;\n          background-color: #dad6d6;\n          width: 42px;\n          height: 16px;\n          margin-top: 0.26rem;\n          margin-right: 0.4rem;\n          box-sizing: border-box;\n        }\n\n        .dashDiv .dashSpan {\n          border-radius: 7px;\n          border: 0.03rem solid #cbcbcb;\n          background-color: #ffffff;\n          float: left;\n          margin-left: 0.04rem;\n          margin-top: 0.019rem;\n          width: 24px;\n          height: 14px;\n          box-sizing: border-box;\n        }\n\n        /*选中状态*/\n        .dashDivSelectd {\n          background-color: #4cd964;\n          transition: 0.5s;\n          border-radius: 1.8667rem;\n          border: 0.03rem solid #ffffff;\n          width: 42px;\n          height: 16px;\n          margin-top: 0.26rem;\n          margin-right: 0.4rem;\n          box-sizing: border-box;\n        }\n\n        .dashDivSelectd .dashSpan {\n          border-radius: 7px;\n          border: 0.03rem solid #ffffff;\n          background-color: #ffffff;\n          float: right;\n          margin-right: 0.04rem;\n          margin-top: 0.019rem;\n          width: 24px;\n          height: 14px;\n          box-sizing: border-box;\n        }\n      }\n    }\n\n    .navright {\n      margin-right: 30px;\n    }\n\n    .prompt {\n      margin-top: 1px;\n      color: #ffffff;\n      font-size: 18px;\n      font-family: 楷体;\n    }\n  }\n\n  //选择链接\n  .stytem {\n    display: flex;\n    justify-content: space-between;\n    align-content: center;\n\n    .stytem-left {\n      .lefttitle {\n        margin-left: 35px;\n        font-size: 14px;\n        color: #ffffff;\n      }\n    }\n\n    .stytem-right {\n      .righttitle {\n        margin-right: 35px;\n        font-size: 14px;\n        color: #ffffff;\n      }\n    }\n\n    .righttitle:hover {\n      color: rgb(236, 60, 11);\n      cursor: pointer;\n    }\n\n    .lefttitle:hover {\n      color: rgb(236, 60, 11);\n      cursor: pointer;\n    }\n  }\n\n  .prompt:hover {\n    color: rgb(236, 60, 11);\n    cursor: pointer;\n  }\n\n  //修改了button的形式\n  .el-button {\n    padding: 12px 110px;\n  }\n\n  //修改输入框大小\n  .el-input {\n    left: 7%;\n    width: 360px;\n  }\n}\n/deep/.el-form-item__error{\n      color: #F56C6C;\n      font-size: 14px;\n      padding: 3px 0px;\n      position: absolute;\n      top: 100%;\n      left: 35px;\n}\n.clickImg{\n    display: flex;\n    position: absolute;\n    right: 60px;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    .hiddenImg{\n      width: 24px;\n      height: 24px;\n      background: url(../../assets/Img/Icon/hidden1.png) no-repeat center center;\n    }\n    .showImg{\n      width: 24px;\n      height: 24px;\n      background: url(../../assets/Img/Icon/show1.png) no-repeat center center;\n    }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}