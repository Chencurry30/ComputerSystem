{"ast":null,"code":"import { userRegister } from \"@/Servers/ServersApi\";\nimport SendCodeBtn from '../components/sendCodeBtn';\nimport rules from '../encryption/rules';\nexport default {\n  name: \"registerView\",\n\n  data() {\n    return {\n      showHiddenImg: false,\n      changeHiddenImg: false,\n      dataForm: {\n        username: '',\n        //账号\n        password: '',\n        //密码\n        phone: '',\n        //手机号\n        smsCode: '' //验证码  \n\n      },\n      checkForm: {\n        username: [{\n          validator: rules.FormValidate.Form().validateUserName,\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: rules.FormValidate.Form().validatePassWord,\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: rules.FormValidate.Form().validatePhone,\n          trigger: 'blur'\n        }],\n        smsCode: [{\n          validator: rules.FormValidate.Form().validateCode,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  components: {\n    SendCodeBtn\n  },\n  computed: {\n    //判断登录条件\n    canRegister() {\n      const {\n        username,\n        password\n      } = this.dataForm;\n      return Boolean(username && password);\n    }\n\n  },\n  methods: {\n    //是否自动登录\n    submitLogin() {\n      this.automaticLogin = !this.automaticLogin;\n    },\n\n    //返回首页\n    backHome() {\n      let location = {\n        name: \"Home\"\n      };\n      this.$router.push(location);\n    },\n\n    //注册\n    goToRegister() {\n      let data = this.dataForm; // console.log(data);\n\n      userRegister(data).then(res => {\n        console.log(res.data);\n\n        if (res.data.code === 200) {\n          this.$message({\n            message: \"恭喜你，注册成功！请登录\",\n            type: \"success\"\n          });\n          this.$router.push({\n            name: 'loginView'\n          });\n        } else if (res.data.code === 201) {\n          this.$message.error(\"用户名重复，请重新输入！\");\n          this.dataForm = {\n            username: \"\",\n            password: \"\"\n          };\n        }\n      });\n    },\n\n    showImg() {\n      this.showHiddenImg = true;\n    },\n\n    changeImg() {\n      console.log(this.changeHiddenImg);\n      this.changeHiddenImg = !this.changeHiddenImg;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2FA;AACA;AACA;AACA;EACAA,oBADA;;EAEAC;IACA;MACAC,oBADA;MAEAC,sBAFA;MAGAC;QACAC,YADA;QACA;QACAC,YAFA;QAEA;QACAC,SAHA;QAGA;QACAC,WAJA,CAIA;;MAJA,CAHA;MASAC;QACAJ,WACA;UAAAK;UAAAC;QAAA,CADA,CADA;QAIAL,WACA;UAAAI;UAAAC;QAAA,CADA,CAJA;QAOAJ,QACA;UAAAG;UAAAC;QAAA,CADA,CAPA;QAUAH,UACA;UAAAE;UAAAC;QAAA,CADA;MAVA;IATA;EAwBA,CA3BA;;EA4BAC;IACAC;EADA,CA5BA;EA+BAC;IACA;IACAC;MACA;QAAAV;QAAAC;MAAA;MACA;IACA;;EALA,CA/BA;EAsCAU;IACA;IACAC;MACA;IACA,CAJA;;IAKA;IACAC;MACA;QAAAlB;MAAA;MACA;IACA,CATA;;IAUA;IACAmB;MACA,yBADA,CAEA;;MACAC;QACAC;;QACA;UACA;YACAC,uBADA;YAEAC;UAFA;UAIA;YAAAvB;UAAA;QACA,CANA,MAOA;UACA;UACA;YACAK,YADA;YAEAC;UAFA;QAIA;MACA,CAhBA;IAkBA,CAhCA;;IAiCAkB;MACA;IACA,CAnCA;;IAoCAC;MACAJ;MACA;IACA;;EAvCA;AAtCA","names":["name","data","showHiddenImg","changeHiddenImg","dataForm","username","password","phone","smsCode","checkForm","validator","trigger","components","SendCodeBtn","computed","canRegister","methods","submitLogin","backHome","goToRegister","userRegister","console","message","type","showImg","changeImg"],"sourceRoot":"src/views","sources":["registerView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <vue-particles\r\n      color=\"#e8f659\"\r\n      :particleOpacity=\"0.7\"\r\n      :particlesNumber=\"60\"\r\n      shapeType=\"circle\"\r\n      :particleSize=\"6\"\r\n      linesColor=\"#e8f659\"\r\n      :linesWidth=\"1\"\r\n      :lineLinked=\"true\"\r\n      :lineOpacity=\"0.4\"\r\n      :linesDistance=\"150\"\r\n      :moveSpeed=\"3\"\r\n      :hoverEffect=\"true\"\r\n      hoverMode=\"grab\"\r\n      :clickEffect=\"true\"\r\n      clickMode=\"push\"\r\n    >\r\n    </vue-particles>\r\n    <div class=\"register_container\">\r\n      <div class=\"register_box\">\r\n\r\n        <div class=\"avatar_box\">\r\n          <img src=\"../assets/Img/LoginImg/tx.jpg\" alt=\"\" />\r\n        </div>\r\n\r\n        <el-form label-width=\"0px\" class=\"register_in\" ref=\"dataForm\" :model=\"dataForm\" :rules=\"checkForm\">\r\n\r\n          <div class=\"form-info\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input\r\n                type=\"text\"\r\n                prefix-icon=\"el-icon-user\"\r\n                placeholder=\"请输入账号\"\r\n                v-model=\"dataForm.username\"\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n              <el-input\r\n                :type=\"changeHiddenImg === true ? 'text':'password'\"\r\n                prefix-icon=\"el-icon-thumb\"\r\n                placeholder=\"请输入密码\"\r\n                v-model=\"dataForm.password\"\r\n                @focus=\"showImg\"\r\n              ></el-input>\r\n              <div class=\"clickImg\" v-show=\"showHiddenImg\" @click=\"changeImg\">\r\n                <div :class=\"changeHiddenImg === true ? 'showImg':'hiddenImg'\"></div>\r\n              </div>\r\n            </el-form-item> \r\n            <el-form-item prop=\"phone\">\r\n              <el-input\r\n                label-width=\"100px\"\r\n                type=\"text\"\r\n                prefix-icon=\"el-icon-user\"\r\n                placeholder=\"请输入手机号\"\r\n                v-model=\"dataForm.phone\"\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"smsCode\" class=\"verification\">\r\n              <el-input\r\n                type=\"password\"\r\n                prefix-icon=\"el-icon-thumb\"\r\n                placeholder=\"请输入验证码\"\r\n                v-model=\"dataForm.smsCode\"\r\n              ></el-input>\r\n              <SendCodeBtn :phone=\"this.dataForm.phone\"></SendCodeBtn>\r\n\r\n            </el-form-item>\r\n          </div>\r\n          <el-form-item class=\"btns\">\r\n            <el-button type=\"primary\" @click=\"goToRegister\" :disabled=\"!canRegister\">注&nbsp;&nbsp;&nbsp;&nbsp;册</el-button>\r\n          </el-form-item>\r\n\r\n          <div class=\"stytem\">\r\n            <div class=\"stytem-left font-text\">\r\n              <div class=\"lefttitle\" @click=\"backHome()\">返回首页</div>\r\n            </div>\r\n            <div class=\"stytem-right font-text\">\r\n              <div class=\"righttitle\">\r\n                <router-link :to=\"{ name: 'loginView' }\">用户登录</router-link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { userRegister } from \"@/Servers/ServersApi\"\r\nimport SendCodeBtn from '../components/sendCodeBtn'\r\nimport rules from '../encryption/rules'\r\nexport default {\r\n  name: \"registerView\",\r\n  data() {\r\n    return {\r\n      showHiddenImg:false,\r\n      changeHiddenImg:false,\r\n      dataForm:{  \r\n        username: '', //账号\r\n        password: '', //密码\r\n        phone:'',         //手机号\r\n        smsCode:'',  //验证码  \r\n      },\r\n      checkForm:{\r\n        username:[\r\n          {validator: rules.FormValidate.Form().validateUserName,trigger:'blur'}\r\n        ],\r\n        password:[\r\n          {validator: rules.FormValidate.Form().validatePassWord,trigger:'blur'}\r\n        ],\r\n        phone:[\r\n          {validator: rules.FormValidate.Form().validatePhone,trigger:'blur'}\r\n        ],\r\n        smsCode:[\r\n          {validator: rules.FormValidate.Form().validateCode,trigger:'blur'}\r\n        ]\r\n      },\r\n    };\r\n  },\r\n  components:{\r\n    SendCodeBtn\r\n  },\r\n  computed:{\r\n    //判断登录条件\r\n    canRegister(){\r\n      const { username,password } = this.dataForm\r\n      return Boolean(username&&password)\r\n    },\r\n  },\r\n  methods: {\r\n    //是否自动登录\r\n    submitLogin() {\r\n      this.automaticLogin = !this.automaticLogin;\r\n    },\r\n    //返回首页\r\n    backHome() {\r\n      let location = { name: \"Home\" };\r\n      this.$router.push(location);\r\n    },\r\n    //注册\r\n    goToRegister() {\r\n      let data = this.dataForm\r\n      // console.log(data);\r\n      userRegister(data).then( res => {\r\n          console.log(res.data);\r\n          if(res.data.code===200){\r\n            this.$message({\r\n              message: \"恭喜你，注册成功！请登录\",\r\n              type: \"success\",\r\n            })\r\n            this.$router.push({name:'loginView'})\r\n          }\r\n          else if (res.data.code === 201) {\r\n            this.$message.error(\"用户名重复，请重新输入！\");\r\n            this.dataForm = {\r\n              username: \"\",\r\n              password: \"\"\r\n            };\r\n          }\r\n        }\r\n      )\r\n    },\r\n    showImg(){\r\n      this.showHiddenImg = true\r\n    },\r\n    changeImg(){\r\n      console.log(this.changeHiddenImg);\r\n      this.changeHiddenImg = !this.changeHiddenImg\r\n    }\r\n}\r\n}\r\n</script>\r\n\r\n\r\n<style scoped lang=\"less\">\r\n  #particles-js {\r\n    width: 100%;\r\n    height: calc(100%);\r\n    position: absolute;\r\n    background-image: url(\"../assets/Img/LoginImg/background.png\");\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n  }\r\n  .register_container {\r\n    height: 100%;\r\n  }\r\n  .el-form-item {\r\n    margin-bottom: 20px;\r\n  }\r\n  .register_box {\r\n    width: 450px;\r\n    height: 300px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 45%;\r\n    transform: translate(-50%, -50%);\r\n    .avatar_box {\r\n      height: 130px;\r\n      width: 130px;\r\n      border: 1px solid #eee;\r\n      border-radius: 50%;\r\n      box-shadow: 0 0 10px #ddd;\r\n      position: absolute;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      background-color: #fff;\r\n      padding: 10px;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 50%;\r\n        background-color: #eee;\r\n      }\r\n    }\r\n  }\r\n  .btns {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .register_in{\r\n    z-index: 999;\r\n    position: absolute;\r\n    bottom: -100px;\r\n    width: 100%;\r\n    padding: 0 20px;\r\n    box-sizing: border-box;\r\n    .verification {\r\n      //验证码登录的输入框\r\n      .el-input {\r\n        width: 240px;\r\n      }\r\n\r\n    }\r\n    //选择链接 \r\n    .stytem {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-content: center;\r\n      .stytem-left {\r\n        .lefttitle {\r\n          margin-left: 35px;\r\n        }\r\n      }\r\n      .stytem-right {\r\n        .righttitle {\r\n          margin-right: 35px;\r\n        }\r\n      }\r\n      .righttitle:hover {\r\n        color: rgb(236, 60, 11);\r\n        cursor: pointer;\r\n      }\r\n      .lefttitle:hover {\r\n        color: rgb(236, 60, 11);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    //修改了button的形式 \r\n    .el-button{\r\n      padding: 12px 110px;\r\n    }\r\n    //修改输入框大小 \r\n    .el-input {\r\n      left: 7%;\r\n      width: 360px;\r\n    }\r\n  }\r\n  /deep/.el-form-item__error{\r\n      color: #F56C6C;\r\n      font-size: 14px;\r\n      padding: 3px 0px;\r\n      position: absolute;\r\n      top: 100%;\r\n      left: 35px;\r\n  }\r\n  .clickImg{\r\n    display: flex;\r\n    position: absolute;\r\n    right: 60px;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    .hiddenImg{\r\n      width: 24px;\r\n      height: 24px;\r\n      background: url(../assets/Img/Icon/hidden1.png) no-repeat center center;\r\n    }\r\n    .showImg{\r\n      width: 24px;\r\n      height: 24px;\r\n      background: url(../assets/Img/Icon/show1.png) no-repeat center center;\r\n    }\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}