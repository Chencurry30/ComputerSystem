{"ast":null,"code":"//用户的相关存储信息\nimport { CryAlgorithm, createUUID } from '../Servers/userServers';\nconst encryption = {\n  namespaced: true,\n  //开启匿名空间\n  state: {\n    uuid: '',\n    //公钥的键值对\n    encryPtion: '' //公钥\n\n  },\n  actions: {//获取个人相关信息 \n  },\n  mutations: {\n    GETUSERINFO(state, info) {\n      state.userInfo = info;\n    },\n\n    CHANGEUSERINFO(state, info) {\n      state.userInfo = info;\n    }\n\n  },\n  getters: {\n    //返回用户的部分信息供头部使用 \n    getUserImg(state) {\n      //个人页面中上部分对应的内容 \n      let userImg = {};\n      userImg.nickname = state.userInfo.nickname || {};\n      userImg.image = state.userInfo.nickname || {};\n      userImg.message = state.userInfo.message || {};\n      return userImg;\n    },\n\n    //返回用户的全部信息 \n    getUserInfo(state) {\n      return state.userInfo;\n    }\n\n  }\n};\nexport default encryption;","map":{"version":3,"names":["CryAlgorithm","createUUID","encryption","namespaced","state","uuid","encryPtion","actions","mutations","GETUSERINFO","info","userInfo","CHANGEUSERINFO","getters","getUserImg","userImg","nickname","image","message","getUserInfo"],"sources":["C:/Users/Administrator/Desktop/code/computer-system/src/frontend/src/store/encryption.js"],"sourcesContent":["//用户的相关存储信息\r\nimport {CryAlgorithm,createUUID} from '../Servers/userServers'\r\nconst encryption = {\r\n    namespaced:true,   //开启匿名空间\r\n    state:{\r\n        uuid:'',          //公钥的键值对\r\n        encryPtion:'',   //公钥\r\n    },\r\n    actions:{\r\n      //获取个人相关信息 \r\n\r\n    },\r\n    mutations:{\r\n      GETUSERINFO(state,info){\r\n        state.userInfo = info\r\n      },\r\n      CHANGEUSERINFO(state,info){\r\n        state.userInfo = info\r\n      }\r\n\r\n    },\r\n    getters:{\r\n      //返回用户的部分信息供头部使用 \r\n      getUserImg(state){\r\n        //个人页面中上部分对应的内容 \r\n        let userImg = {}\r\n        userImg.nickname = state.userInfo.nickname || {}\r\n        userImg.image = state.userInfo.nickname || {}\r\n        userImg.message = state.userInfo.message || {}\r\n        return userImg\r\n      },\r\n\r\n      //返回用户的全部信息 \r\n      getUserInfo(state){\r\n        return state.userInfo\r\n      }\r\n    }\r\n}\r\nexport default encryption"],"mappings":"AAAA;AACA,SAAQA,YAAR,EAAqBC,UAArB,QAAsC,wBAAtC;AACA,MAAMC,UAAU,GAAG;EACfC,UAAU,EAAC,IADI;EACI;EACnBC,KAAK,EAAC;IACFC,IAAI,EAAC,EADH;IACgB;IAClBC,UAAU,EAAC,EAFT,CAEe;;EAFf,CAFS;EAMfC,OAAO,EAAC,CACN;EADM,CANO;EAUfC,SAAS,EAAC;IACRC,WAAW,CAACL,KAAD,EAAOM,IAAP,EAAY;MACrBN,KAAK,CAACO,QAAN,GAAiBD,IAAjB;IACD,CAHO;;IAIRE,cAAc,CAACR,KAAD,EAAOM,IAAP,EAAY;MACxBN,KAAK,CAACO,QAAN,GAAiBD,IAAjB;IACD;;EANO,CAVK;EAmBfG,OAAO,EAAC;IACN;IACAC,UAAU,CAACV,KAAD,EAAO;MACf;MACA,IAAIW,OAAO,GAAG,EAAd;MACAA,OAAO,CAACC,QAAR,GAAmBZ,KAAK,CAACO,QAAN,CAAeK,QAAf,IAA2B,EAA9C;MACAD,OAAO,CAACE,KAAR,GAAgBb,KAAK,CAACO,QAAN,CAAeK,QAAf,IAA2B,EAA3C;MACAD,OAAO,CAACG,OAAR,GAAkBd,KAAK,CAACO,QAAN,CAAeO,OAAf,IAA0B,EAA5C;MACA,OAAOH,OAAP;IACD,CATK;;IAWN;IACAI,WAAW,CAACf,KAAD,EAAO;MAChB,OAAOA,KAAK,CAACO,QAAb;IACD;;EAdK;AAnBO,CAAnB;AAoCA,eAAeT,UAAf"},"metadata":{},"sourceType":"module"}