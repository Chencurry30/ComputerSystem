{"ast":null,"code":"'use strict';\n\nvar list = require('postcss').list;\n\nmodule.exports = {\n  /**\n   * Throw special error, to tell beniary,\n   * that this error is from Autoprefixer.\n   */\n  error: function error(text) {\n    var err = new Error(text);\n    err.autoprefixer = true;\n    throw err;\n  },\n\n  /**\n   * Return array, that doesn’t contain duplicates.\n   */\n  uniq: function uniq(array) {\n    var filtered = [];\n\n    for (var _iterator = array, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var i = _ref;\n\n      if (filtered.indexOf(i) === -1) {\n        filtered.push(i);\n      }\n    }\n\n    return filtered;\n  },\n\n  /**\n   * Return \"-webkit-\" on \"-webkit- old\"\n   */\n  removeNote: function removeNote(string) {\n    if (string.indexOf(' ') === -1) {\n      return string;\n    }\n\n    return string.split(' ')[0];\n  },\n\n  /**\n   * Escape RegExp symbols\n   */\n  escapeRegexp: function escapeRegexp(string) {\n    return string.replace(/[.?*+\\^\\$\\[\\]\\\\(){}|\\-]/g, '\\\\$&');\n  },\n\n  /**\n   * Return regexp to check, that CSS string contain word\n   */\n  regexp: function regexp(word) {\n    var escape = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (escape) {\n      word = this.escapeRegexp(word);\n    }\n\n    return new RegExp('(^|[\\\\s,(])(' + word + '($|[\\\\s(,]))', 'gi');\n  },\n\n  /**\n   * Change comma list\n   */\n  editList: function editList(value, callback) {\n    var origin = list.comma(value);\n    var changed = callback(origin, []);\n\n    if (origin === changed) {\n      return value;\n    }\n\n    var join = value.match(/,\\s*/);\n    join = join ? join[0] : ', ';\n    return changed.join(join);\n  }\n};","map":{"version":3,"names":["list","require","module","exports","error","text","err","Error","autoprefixer","uniq","array","filtered","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","i","indexOf","push","removeNote","string","split","escapeRegexp","replace","regexp","word","escape","arguments","undefined","RegExp","editList","callback","origin","comma","changed","join","match"],"sources":["C:/Users/Administrator/Desktop/code/computer-system/src/frontend/node_modules/autoprefixer/lib/utils.js"],"sourcesContent":["'use strict';\n\nvar list = require('postcss').list;\n\nmodule.exports = {\n\n    /**\n     * Throw special error, to tell beniary,\n     * that this error is from Autoprefixer.\n     */\n    error: function error(text) {\n        var err = new Error(text);\n        err.autoprefixer = true;\n        throw err;\n    },\n\n\n    /**\n     * Return array, that doesn’t contain duplicates.\n     */\n    uniq: function uniq(array) {\n        var filtered = [];\n        for (var _iterator = array, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref = _iterator[_i++];\n            } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref = _i.value;\n            }\n\n            var i = _ref;\n\n            if (filtered.indexOf(i) === -1) {\n                filtered.push(i);\n            }\n        }\n        return filtered;\n    },\n\n\n    /**\n     * Return \"-webkit-\" on \"-webkit- old\"\n     */\n    removeNote: function removeNote(string) {\n        if (string.indexOf(' ') === -1) {\n            return string;\n        }\n\n        return string.split(' ')[0];\n    },\n\n\n    /**\n     * Escape RegExp symbols\n     */\n    escapeRegexp: function escapeRegexp(string) {\n        return string.replace(/[.?*+\\^\\$\\[\\]\\\\(){}|\\-]/g, '\\\\$&');\n    },\n\n\n    /**\n     * Return regexp to check, that CSS string contain word\n     */\n    regexp: function regexp(word) {\n        var escape = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (escape) {\n            word = this.escapeRegexp(word);\n        }\n        return new RegExp('(^|[\\\\s,(])(' + word + '($|[\\\\s(,]))', 'gi');\n    },\n\n\n    /**\n     * Change comma list\n     */\n    editList: function editList(value, callback) {\n        var origin = list.comma(value);\n        var changed = callback(origin, []);\n\n        if (origin === changed) {\n            return value;\n        }\n\n        var join = value.match(/,\\s*/);\n        join = join ? join[0] : ', ';\n        return changed.join(join);\n    }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}