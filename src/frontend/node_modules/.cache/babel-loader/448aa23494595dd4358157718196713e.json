{"ast":null,"code":"'use strict';\n\nvar browserslist = require('browserslist');\n\nfunction capitalize(str) {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n}\n\nvar names = {\n  ie: 'IE',\n  ie_mob: 'IE Mobile',\n  ios_saf: 'iOS',\n  op_mini: 'Opera Mini',\n  op_mob: 'Opera Mobile',\n  and_chr: 'Chrome for Android',\n  and_ff: 'Firefox for Android',\n  and_uc: 'UC for Android'\n};\n\nvar prefix = function prefix(name, prefixes) {\n  var out = '  ' + name + ': ';\n  out += prefixes.map(function (i) {\n    return i.replace(/^-(.*)-$/g, '$1');\n  }).join(', ');\n  out += '\\n';\n  return out;\n};\n\nmodule.exports = function (prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return 'No browsers selected';\n  }\n\n  var versions = {};\n\n  for (var _iterator = prefixes.browsers.selected, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var browser = _ref;\n\n    var _browser$split = browser.split(' '),\n        name = _browser$split[0],\n        version = _browser$split[1];\n\n    name = names[name] || capitalize(name);\n\n    if (versions[name]) {\n      versions[name].push(version);\n    } else {\n      versions[name] = [version];\n    }\n  }\n\n  var out = 'Browsers:\\n';\n\n  for (var _browser in versions) {\n    var list = versions[_browser];\n    list = list.sort(function (a, b) {\n      return parseFloat(b) - parseFloat(a);\n    });\n    out += '  ' + _browser + ': ' + list.join(', ') + '\\n';\n  }\n\n  var coverage = browserslist.coverage(prefixes.browsers.selected);\n  var round = Math.round(coverage * 100) / 100.0;\n  out += '\\nThese browsers account for ' + round + '% of all users globally\\n';\n  var atrules = '';\n\n  for (var name in prefixes.add) {\n    var data = prefixes.add[name];\n\n    if (name[0] === '@' && data.prefixes) {\n      atrules += prefix(name, data.prefixes);\n    }\n  }\n\n  if (atrules !== '') {\n    out += '\\nAt-Rules:\\n' + atrules;\n  }\n\n  var selectors = '';\n\n  for (var _iterator2 = prefixes.add.selectors, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i2 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i2++];\n    } else {\n      _i2 = _iterator2.next();\n      if (_i2.done) break;\n      _ref2 = _i2.value;\n    }\n\n    var selector = _ref2;\n\n    if (selector.prefixes) {\n      selectors += prefix(selector.name, selector.prefixes);\n    }\n  }\n\n  if (selectors !== '') {\n    out += '\\nSelectors:\\n' + selectors;\n  }\n\n  var values = '';\n  var props = '';\n\n  for (var _name in prefixes.add) {\n    var _data = prefixes.add[_name];\n\n    if (_name[0] !== '@' && _data.prefixes) {\n      props += prefix(_name, _data.prefixes);\n    }\n\n    if (!_data.values) {\n      continue;\n    }\n\n    for (var _iterator3 = _data.values, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var value = _ref3;\n      var string = prefix(value.name, value.prefixes);\n\n      if (values.indexOf(string) === -1) {\n        values += string;\n      }\n    }\n  }\n\n  if (props !== '') {\n    out += '\\nProperties:\\n' + props;\n  }\n\n  if (values !== '') {\n    out += '\\nValues:\\n' + values;\n  }\n\n  if (atrules === '' && selectors === '' && props === '' && values === '') {\n    out += '\\nAwesome! Your browsers don\\'t require any vendor prefixes.' + '\\nNow you can remove Autoprefixer from build steps.';\n  }\n\n  return out;\n};","map":{"version":3,"names":["browserslist","require","capitalize","str","slice","toUpperCase","names","ie","ie_mob","ios_saf","op_mini","op_mob","and_chr","and_ff","and_uc","prefix","name","prefixes","out","map","i","replace","join","module","exports","browsers","selected","length","versions","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","value","browser","_browser$split","split","version","push","_browser","list","sort","a","b","parseFloat","coverage","round","Math","atrules","add","data","selectors","_iterator2","_isArray2","_i2","_ref2","selector","values","props","_name","_data","_iterator3","_isArray3","_i3","_ref3","string","indexOf"],"sources":["C:/Users/Administrator/Desktop/code/computer-system/src/frontend/node_modules/autoprefixer/lib/info.js"],"sourcesContent":["'use strict';\n\nvar browserslist = require('browserslist');\n\nfunction capitalize(str) {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n}\n\nvar names = {\n    ie: 'IE',\n    ie_mob: 'IE Mobile',\n    ios_saf: 'iOS',\n    op_mini: 'Opera Mini',\n    op_mob: 'Opera Mobile',\n    and_chr: 'Chrome for Android',\n    and_ff: 'Firefox for Android',\n    and_uc: 'UC for Android'\n};\n\nvar prefix = function prefix(name, prefixes) {\n    var out = '  ' + name + ': ';\n    out += prefixes.map(function (i) {\n        return i.replace(/^-(.*)-$/g, '$1');\n    }).join(', ');\n    out += '\\n';\n    return out;\n};\n\nmodule.exports = function (prefixes) {\n    if (prefixes.browsers.selected.length === 0) {\n        return 'No browsers selected';\n    }\n\n    var versions = {};\n    for (var _iterator = prefixes.browsers.selected, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n        } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n        }\n\n        var browser = _ref;\n\n        var _browser$split = browser.split(' '),\n            name = _browser$split[0],\n            version = _browser$split[1];\n\n        name = names[name] || capitalize(name);\n        if (versions[name]) {\n            versions[name].push(version);\n        } else {\n            versions[name] = [version];\n        }\n    }\n\n    var out = 'Browsers:\\n';\n    for (var _browser in versions) {\n        var list = versions[_browser];\n        list = list.sort(function (a, b) {\n            return parseFloat(b) - parseFloat(a);\n        });\n        out += '  ' + _browser + ': ' + list.join(', ') + '\\n';\n    }\n\n    var coverage = browserslist.coverage(prefixes.browsers.selected);\n    var round = Math.round(coverage * 100) / 100.0;\n    out += '\\nThese browsers account for ' + round + '% of all users globally\\n';\n\n    var atrules = '';\n    for (var name in prefixes.add) {\n        var data = prefixes.add[name];\n        if (name[0] === '@' && data.prefixes) {\n            atrules += prefix(name, data.prefixes);\n        }\n    }\n    if (atrules !== '') {\n        out += '\\nAt-Rules:\\n' + atrules;\n    }\n\n    var selectors = '';\n    for (var _iterator2 = prefixes.add.selectors, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n        } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n        }\n\n        var selector = _ref2;\n\n        if (selector.prefixes) {\n            selectors += prefix(selector.name, selector.prefixes);\n        }\n    }\n    if (selectors !== '') {\n        out += '\\nSelectors:\\n' + selectors;\n    }\n\n    var values = '';\n    var props = '';\n    for (var _name in prefixes.add) {\n        var _data = prefixes.add[_name];\n        if (_name[0] !== '@' && _data.prefixes) {\n            props += prefix(_name, _data.prefixes);\n        }\n\n        if (!_data.values) {\n            continue;\n        }\n        for (var _iterator3 = _data.values, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n            var _ref3;\n\n            if (_isArray3) {\n                if (_i3 >= _iterator3.length) break;\n                _ref3 = _iterator3[_i3++];\n            } else {\n                _i3 = _iterator3.next();\n                if (_i3.done) break;\n                _ref3 = _i3.value;\n            }\n\n            var value = _ref3;\n\n            var string = prefix(value.name, value.prefixes);\n            if (values.indexOf(string) === -1) {\n                values += string;\n            }\n        }\n    }\n\n    if (props !== '') {\n        out += '\\nProperties:\\n' + props;\n    }\n    if (values !== '') {\n        out += '\\nValues:\\n' + values;\n    }\n\n    if (atrules === '' && selectors === '' && props === '' && values === '') {\n        out += '\\nAwesome! Your browsers don\\'t require any vendor prefixes.' + '\\nNow you can remove Autoprefixer from build steps.';\n    }\n\n    return out;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}