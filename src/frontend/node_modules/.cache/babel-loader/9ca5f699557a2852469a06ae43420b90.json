{"ast":null,"code":"import { userRegister } from \"../../Servers/userServers\";\nimport SendCodeBtn from '../../components/sendCode/sendCodeBtn';\nimport { CryAlgorithm } from '../../utils'; //公钥加密函数\n\nimport { mapGetters } from 'vuex'; //获取公钥的相关配置\n\nimport rules from '../../utils/rules';\nexport default {\n  name: \"registerView\",\n\n  data() {\n    return {\n      showHiddenImg: false,\n      changeHiddenImg: false,\n      dataForm: {\n        username: '',\n        //账号\n        password: '',\n        //密码\n        phone: '',\n        //手机号\n        smsCode: '' //验证码\n\n      },\n      checkForm: {\n        username: [{\n          validator: rules.FormValidate.Form().validateUserName,\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: rules.FormValidate.Form().validatePassWord,\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: rules.FormValidate.Form().validatePhone,\n          trigger: 'blur'\n        }],\n        smsCode: [{\n          validator: rules.FormValidate.Form().validateCode,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  components: {\n    SendCodeBtn\n  },\n  computed: {\n    //判断登录条件\n    canRegister() {\n      const {\n        username,\n        password\n      } = this.dataForm;\n      return Boolean(username && password);\n    },\n\n    ...mapGetters('encryption', {\n      getkeyInfo: 'getkeyInfo'\n    })\n  },\n  methods: {\n    //是否自动登录\n    submitLogin() {\n      this.automaticLogin = !this.automaticLogin;\n    },\n\n    //返回首页\n    backHome() {\n      let location = {\n        name: \"mainHome\"\n      };\n      this.$router.push(location);\n    },\n\n    //注册\n    goToRegister() {\n      let data = {};\n      data.username = this.dataForm.username;\n      data.password = CryAlgorithm(this.getkeyInfo.encryPtion, this.dataForm.password);\n      data.phone = this.dataForm.phone;\n      data.smsCode = this.dataForm.smsCode;\n      data.uuId = this.getkeyInfo.uuId;\n      userRegister(data).then(res => {\n        if (res.data.code === 200) {\n          this.$message({\n            message: \"恭喜你，注册成功！请登录\",\n            type: \"success\"\n          });\n          this.$router.push({\n            name: 'loginView'\n          });\n        } else if (res.data.code === 201) {\n          this.$message.error(\"用户名重复，请重新输入！\");\n          this.dataForm = {\n            username: \"\",\n            password: \"\",\n            phone: \"\",\n            smsCode: \"\"\n          };\n        }\n      });\n    },\n\n    showImg() {\n      this.showHiddenImg = true;\n    },\n\n    changeImg() {\n      console.log(this.changeHiddenImg);\n      this.changeHiddenImg = !this.changeHiddenImg;\n    }\n\n  },\n\n  mounted() {\n    this.$store.dispatch('encryption/getPubKey');\n  }\n\n};","map":{"version":3,"mappings":"AA+FA;AACA;AACA,2C,CAAA;;AACA,kC,CAAA;;AACA;AACA;EACAA,oBADA;;EAEAC;IACA;MACAC,oBADA;MAEAC,sBAFA;MAGAC;QACAC,YADA;QACA;QACAC,YAFA;QAEA;QACAC,SAHA;QAGA;QACAC,WAJA,CAIA;;MAJA,CAHA;MASAC;QACAJ,WACA;UAAAK;UAAAC;QAAA,CADA,CADA;QAIAL,WACA;UAAAI;UAAAC;QAAA,CADA,CAJA;QAOAJ,QACA;UAAAG;UAAAC;QAAA,CADA,CAPA;QAUAH,UACA;UAAAE;UAAAC;QAAA,CADA;MAVA;IATA;EAwBA,CA3BA;;EA4BAC;IACAC;EADA,CA5BA;EA+BAC;IACA;IACAC;MACA;QAAAV;QAAAC;MAAA;MACA;IACA,CALA;;IAMA;MACAU;IADA;EANA,CA/BA;EAyCAC;IACA;IACAC;MACA;IACA,CAJA;;IAKA;IACAC;MACA;QAAAnB;MAAA;MACA;IACA,CATA;;IAUA;IACAoB;MACA;MACAnB;MACAA;MACAA;MACAA;MACAA;MACAoB;QACA;UACA;YACAC,uBADA;YAEAC;UAFA;UAIA;YAAAvB;UAAA;QACA,CANA,MAOA;UACA;UACA;YACAK,YADA;YAEAC,YAFA;YAGAC,SAHA;YAIAC;UAJA;QAMA;MACA,CAjBA;IAmBA,CArCA;;IAsCAgB;MACA;IACA,CAxCA;;IAyCAC;MACAC;MACA;IACA;;EA5CA,CAzCA;;EAuFAC;IACA;EACA;;AAzFA","names":["name","data","showHiddenImg","changeHiddenImg","dataForm","username","password","phone","smsCode","checkForm","validator","trigger","components","SendCodeBtn","computed","canRegister","getkeyInfo","methods","submitLogin","backHome","goToRegister","userRegister","message","type","showImg","changeImg","console","mounted"],"sourceRoot":"src/views/baseViews","sources":["registerView.vue"],"sourcesContent":["<template>\n  <div>\n    <vue-particles\n      color=\"#e8f659\"\n      :particleOpacity=\"0.7\"\n      :particlesNumber=\"60\"\n      shapeType=\"circle\"\n      :particleSize=\"6\"\n      linesColor=\"#e8f659\"\n      :linesWidth=\"1\"\n      :lineLinked=\"true\"\n      :lineOpacity=\"0.4\"\n      :linesDistance=\"150\"\n      :moveSpeed=\"3\"\n      :hoverEffect=\"true\"\n      hoverMode=\"grab\"\n      :clickEffect=\"true\"\n      clickMode=\"push\"\n    >\n    </vue-particles>\n    <div class=\"register_container\">\n      <div class=\"register_box\">\n\n        <div class=\"avatar_box\">\n          <img src=\"../../assets/Img/LoginImg/tx.jpg\" alt=\"\" />\n        </div>\n\n        <el-form label-width=\"0px\" class=\"register_in\" ref=\"dataForm\" :model=\"dataForm\" :rules=\"checkForm\">\n\n          <div class=\"form-info\">\n            <el-form-item prop=\"username\">\n              <el-input\n                type=\"text\"\n                prefix-icon=\"el-icon-user\"\n                placeholder=\"请输入账号\"\n                v-model.trim=\"dataForm.username\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item prop=\"password\">\n              <el-input\n                :type=\"changeHiddenImg === true ? 'text':'password'\"\n                prefix-icon=\"el-icon-thumb\"\n                placeholder=\"请输入密码\"\n                v-model.trim=\"dataForm.password\"\n                @focus=\"showImg\"\n              ></el-input>\n              <div class=\"clickImg\" v-show=\"showHiddenImg\" @click=\"changeImg\">\n                <div :class=\"changeHiddenImg === true ? 'showImg':'hiddenImg'\"></div>\n              </div>\n            </el-form-item>\n\n\n\n\n            <el-form-item prop=\"phone\">\n              <el-input\n                label-width=\"100px\"\n                type=\"text\"\n                prefix-icon=\"el-icon-user\"\n                placeholder=\"请输入手机号\"\n                v-model.trim=\"dataForm.phone\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item prop=\"smsCode\" class=\"verification\">\n              <el-input\n                type=\"text\"\n                prefix-icon=\"el-icon-thumb\"\n                placeholder=\"请输入验证码\"\n                v-model.trim=\"dataForm.smsCode\"\n              ></el-input>\n              <SendCodeBtn :phone=\"this.dataForm.phone\"></SendCodeBtn>\n\n            </el-form-item>\n          </div>\n          <el-form-item class=\"btns\">\n            <el-button type=\"primary\" @click=\"goToRegister\" :disabled=\"!canRegister\">注&nbsp;&nbsp;&nbsp;&nbsp;册</el-button>\n          </el-form-item>\n\n          <div class=\"stytem\">\n            <div class=\"stytem-left font-text\">\n              <div class=\"lefttitle\" @click=\"backHome()\">返回首页</div>\n            </div>\n            <div class=\"stytem-right font-text\">\n              <div class=\"righttitle\">\n                <router-link :to=\"{ name: 'loginView' }\">用户登录</router-link>\n              </div>\n            </div>\n          </div>\n\n        </el-form>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { userRegister } from \"../../Servers/userServers\"\nimport SendCodeBtn from '../../components/sendCode/sendCodeBtn'\nimport {CryAlgorithm} from '../../utils'  //公钥加密函数\nimport {mapGetters} from 'vuex'  //获取公钥的相关配置\nimport rules from '../../utils/rules'\nexport default {\n  name: \"registerView\",\n  data() {\n    return {\n      showHiddenImg:false,\n      changeHiddenImg:false,\n      dataForm:{\n        username: '', //账号\n        password: '', //密码\n        phone:'',         //手机号\n        smsCode:'',  //验证码\n      },\n      checkForm:{\n        username:[\n          {validator: rules.FormValidate.Form().validateUserName,trigger:'blur'}\n        ],\n        password:[\n          {validator: rules.FormValidate.Form().validatePassWord,trigger:'blur'}\n        ],\n        phone:[\n          {validator: rules.FormValidate.Form().validatePhone,trigger:'blur'}\n        ],\n        smsCode:[\n          {validator: rules.FormValidate.Form().validateCode,trigger:'blur'}\n        ]\n      },\n    };\n  },\n  components:{\n    SendCodeBtn\n  },\n  computed:{\n    //判断登录条件\n    canRegister(){\n      const { username,password } = this.dataForm\n      return Boolean(username&&password)\n    },\n    ...mapGetters('encryption',{\n      getkeyInfo:'getkeyInfo'\n    })\n  },\n  methods: {\n    //是否自动登录\n    submitLogin() {\n      this.automaticLogin = !this.automaticLogin;\n    },\n    //返回首页\n    backHome() {\n      let location = { name: \"mainHome\" };\n      this.$router.push(location);\n    },\n    //注册\n    goToRegister() {\n      let data = {}\n      data.username = this.dataForm.username\n      data.password = CryAlgorithm(this.getkeyInfo.encryPtion,this.dataForm.password)\n      data.phone = this.dataForm.phone\n      data.smsCode = this.dataForm.smsCode\n      data.uuId = this.getkeyInfo.uuId\n      userRegister(data).then( res => {\n          if(res.data.code===200){\n            this.$message({\n              message: \"恭喜你，注册成功！请登录\",\n              type: \"success\",\n            })\n            this.$router.push({name:'loginView'})\n          }\n          else if (res.data.code === 201) {\n            this.$message.error(\"用户名重复，请重新输入！\");\n            this.dataForm = {\n              username: \"\",\n              password: \"\",\n              phone:\"\",\n              smsCode:\"\",\n            };\n          }\n        }\n      )\n    },\n    showImg(){\n      this.showHiddenImg = true\n    },\n    changeImg(){\n      console.log(this.changeHiddenImg);\n      this.changeHiddenImg = !this.changeHiddenImg\n    }\n  },\n  mounted(){\n    this.$store.dispatch('encryption/getPubKey');\n  }\n}\n</script>\n\n\n<style scoped lang=\"less\">\n  #particles-js {\n    width: 100%;\n    height: calc(100%);\n    position: absolute;\n    background-image: url(\"../../assets/Img/LoginImg/background.png\");\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n  .register_container {\n    height: 100%;\n  }\n  .el-form-item {\n    margin-bottom: 20px;\n  }\n  .register_box {\n    width: 450px;\n    height: 300px;\n    position: absolute;\n    left: 50%;\n    top: 45%;\n    transform: translate(-50%, -50%);\n    .avatar_box {\n      height: 130px;\n      width: 130px;\n      border: 1px solid #eee;\n      border-radius: 50%;\n      box-shadow: 0 0 10px #ddd;\n      position: absolute;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background-color: #fff;\n      padding: 10px;\n      img {\n        width: 100%;\n        height: 100%;\n        border-radius: 50%;\n        background-color: #eee;\n      }\n    }\n  }\n  .btns {\n    display: flex;\n    justify-content: space-between;\n  }\n  .register_in{\n    z-index: 999;\n    position: absolute;\n    bottom: -100px;\n    width: 100%;\n    padding: 0 20px;\n    box-sizing: border-box;\n    .verification {\n      //验证码登录的输入框\n      .el-input {\n        width: 240px;\n      }\n\n    }\n    //选择链接\n    .stytem {\n      display: flex;\n      justify-content: space-between;\n      align-content: center;\n      .stytem-left {\n        .lefttitle {\n          margin-left: 35px;\n        }\n      }\n      .stytem-right {\n        .righttitle {\n          margin-right: 35px;\n        }\n      }\n      .righttitle:hover {\n        color: rgb(236, 60, 11);\n        cursor: pointer;\n      }\n      .lefttitle:hover {\n        color: rgb(236, 60, 11);\n        cursor: pointer;\n      }\n    }\n    //修改了button的形式\n    .el-button{\n      padding: 12px 110px;\n    }\n    //修改输入框大小\n    .el-input {\n      left: 7%;\n      width: 360px;\n    }\n  }\n  /deep/.el-form-item__error{\n      color: #F56C6C;\n      font-size: 14px;\n      padding: 3px 0px;\n      position: absolute;\n      top: 100%;\n      left: 35px;\n  }\n  .clickImg{\n    display: flex;\n    position: absolute;\n    right: 60px;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    .hiddenImg{\n      width: 24px;\n      height: 24px;\n      background: url(../../assets/Img/Icon/hidden1.png) no-repeat center center;\n    }\n    .showImg{\n      width: 24px;\n      height: 24px;\n      background: url(../../assets/Img/Icon/show1.png) no-repeat center center;\n    }\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}