{"ast":null,"code":"'use strict';\n\nvar parser = require('postcss-value-parser');\n\nfunction convert(value) {\n  if (value && value.length === 2 && value[0] === 'span' && parseInt(value[1], 10) > 0) {\n    return [false, parseInt(value[1], 10)];\n  }\n\n  if (value && value.length === 1 && parseInt(value[0], 10) > 0) {\n    return [parseInt(value[0], 10), false];\n  }\n\n  return [false, false];\n}\n\nfunction translate(values, startIndex, endIndex) {\n  var startValue = values[startIndex];\n  var endValue = values[endIndex];\n\n  if (!startValue) {\n    return [false, false];\n  }\n\n  var _convert = convert(startValue),\n      start = _convert[0],\n      spanStart = _convert[1];\n\n  var _convert2 = convert(endValue),\n      end = _convert2[0],\n      spanEnd = _convert2[1];\n\n  if (start && !endValue) {\n    return [start, false];\n  }\n\n  if (spanStart && end) {\n    return [end - spanStart, spanStart];\n  }\n\n  if (start && spanEnd) {\n    return [start, spanEnd];\n  }\n\n  if (start && end) {\n    return [start, end - start];\n  }\n\n  return [false, false];\n}\n\nfunction parse(decl) {\n  var node = parser(decl.value);\n  var values = [];\n  var current = 0;\n  values[current] = [];\n\n  for (var _iterator = node.nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var i = _ref;\n\n    if (i.type === 'div') {\n      current += 1;\n      values[current] = [];\n    } else if (i.type === 'word') {\n      values[current].push(i.value);\n    }\n  }\n\n  return values;\n}\n\nfunction parseTemplateShortcut(decl) {\n  var node = parser(decl.value, {\n    loose: true\n  });\n  var values = [];\n  var current = 0;\n  values[current] = [];\n\n  for (var _iterator2 = node.nodes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i2 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i2++];\n    } else {\n      _i2 = _iterator2.next();\n      if (_i2.done) break;\n      _ref2 = _i2.value;\n    }\n\n    var i = _ref2;\n\n    if (i.type === 'div') {\n      current += 1;\n      values[current] = [];\n    } else {\n      values[current].push(parser.stringify(i));\n    }\n  }\n\n  return values;\n}\n\nfunction walkRepeat(node) {\n  var fixed = [];\n\n  for (var _iterator3 = node.nodes, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n    var _ref3;\n\n    if (_isArray3) {\n      if (_i3 >= _iterator3.length) break;\n      _ref3 = _iterator3[_i3++];\n    } else {\n      _i3 = _iterator3.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var i = _ref3;\n\n    if (i.nodes) {\n      walkRepeat(i);\n    }\n\n    fixed.push(i);\n\n    if (i.type === 'function' && i.value === 'repeat') {\n      var first = i.nodes.shift();\n\n      if (first) {\n        var count = first.value;\n        i.nodes.shift();\n        i.value = '';\n        fixed.push({\n          type: 'word',\n          value: '[' + count + ']'\n        });\n      }\n    }\n  }\n\n  node.nodes = fixed;\n}\n\nfunction changeRepeat(value) {\n  var ast = parser(value);\n  walkRepeat(ast);\n  return ast.toString();\n}\n\nmodule.exports = {\n  parse: parse,\n  translate: translate,\n  changeRepeat: changeRepeat,\n  parseTemplateShortcut: parseTemplateShortcut\n};","map":{"version":3,"names":["parser","require","convert","value","length","parseInt","translate","values","startIndex","endIndex","startValue","endValue","_convert","start","spanStart","_convert2","end","spanEnd","parse","decl","node","current","_iterator","nodes","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","i","type","push","parseTemplateShortcut","loose","_iterator2","_isArray2","_i2","_ref2","stringify","walkRepeat","fixed","_iterator3","_isArray3","_i3","_ref3","first","shift","count","changeRepeat","ast","toString","module","exports"],"sources":["C:/Users/Administrator/Desktop/code/computer-system/src/frontend/node_modules/autoprefixer/lib/hacks/grid-shorthand.js"],"sourcesContent":["'use strict';\n\nvar parser = require('postcss-value-parser');\n\nfunction convert(value) {\n    if (value && value.length === 2 && value[0] === 'span' && parseInt(value[1], 10) > 0) {\n        return [false, parseInt(value[1], 10)];\n    }\n\n    if (value && value.length === 1 && parseInt(value[0], 10) > 0) {\n        return [parseInt(value[0], 10), false];\n    }\n\n    return [false, false];\n}\n\nfunction translate(values, startIndex, endIndex) {\n    var startValue = values[startIndex];\n    var endValue = values[endIndex];\n\n    if (!startValue) {\n        return [false, false];\n    }\n\n    var _convert = convert(startValue),\n        start = _convert[0],\n        spanStart = _convert[1];\n\n    var _convert2 = convert(endValue),\n        end = _convert2[0],\n        spanEnd = _convert2[1];\n\n    if (start && !endValue) {\n        return [start, false];\n    }\n\n    if (spanStart && end) {\n        return [end - spanStart, spanStart];\n    }\n\n    if (start && spanEnd) {\n        return [start, spanEnd];\n    }\n\n    if (start && end) {\n        return [start, end - start];\n    }\n\n    return [false, false];\n}\n\nfunction parse(decl) {\n    var node = parser(decl.value);\n\n    var values = [];\n    var current = 0;\n    values[current] = [];\n\n    for (var _iterator = node.nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n        } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n        }\n\n        var i = _ref;\n\n        if (i.type === 'div') {\n            current += 1;\n            values[current] = [];\n        } else if (i.type === 'word') {\n            values[current].push(i.value);\n        }\n    }\n\n    return values;\n}\n\nfunction parseTemplateShortcut(decl) {\n    var node = parser(decl.value, { loose: true });\n\n    var values = [];\n    var current = 0;\n    values[current] = [];\n\n    for (var _iterator2 = node.nodes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n        } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n        }\n\n        var i = _ref2;\n\n        if (i.type === 'div') {\n            current += 1;\n            values[current] = [];\n        } else {\n            values[current].push(parser.stringify(i));\n        }\n    }\n\n    return values;\n}\n\nfunction walkRepeat(node) {\n    var fixed = [];\n    for (var _iterator3 = node.nodes, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref3 = _iterator3[_i3++];\n        } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref3 = _i3.value;\n        }\n\n        var i = _ref3;\n\n        if (i.nodes) {\n            walkRepeat(i);\n        }\n        fixed.push(i);\n        if (i.type === 'function' && i.value === 'repeat') {\n            var first = i.nodes.shift();\n            if (first) {\n                var count = first.value;\n                i.nodes.shift();\n                i.value = '';\n                fixed.push({ type: 'word', value: '[' + count + ']' });\n            }\n        }\n    }\n    node.nodes = fixed;\n}\n\nfunction changeRepeat(value) {\n    var ast = parser(value);\n    walkRepeat(ast);\n    return ast.toString();\n}\n\nmodule.exports = {\n    parse: parse,\n    translate: translate,\n    changeRepeat: changeRepeat,\n    parseTemplateShortcut: parseTemplateShortcut\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}