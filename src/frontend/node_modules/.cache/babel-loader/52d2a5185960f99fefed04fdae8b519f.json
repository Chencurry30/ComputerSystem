{"ast":null,"code":"import Cookies from 'js-cookie';\nimport { userLogin } from '@/Servers/ServersApi';\nimport { getPublicKey } from '@/Servers/encryption';\nimport { CryAlgorithm } from '../encryption/index';\nexport default {\n  name: \"loginView\",\n\n  data() {\n    return {\n      automaticLogin: false,\n      //自动登录\n      sendTimeCode: 5,\n      //再次发送的时间\n      bVerification: false,\n      //节流阀，控制点击获取验证码\n      verificationCodeInfo: \"发送验证码\",\n      encryption: '',\n      dataForm: {\n        username: '',\n        //账号\n        password: '',\n        //密码\n        phone: '',\n        //手机号\n        smsCode: '' //验证码  \n\n      }\n    };\n  },\n\n  computed: {\n    //判断提交\n    canSubmit() {\n      const {\n        username,\n        password\n      } = this.dataForm;\n      return Boolean(username && password);\n    }\n\n  },\n  methods: {\n    //是否自动登录\n    submitLogin() {\n      this.automaticLogin = !this.automaticLogin;\n    },\n\n    //返回首页\n    backHome() {\n      let location = {\n        name: \"Home\"\n      };\n      this.$router.push(location);\n    },\n\n    //登录 \n    goToLogin() {\n      console.log(this.encryption);\n      this.dataForm.password = CryAlgorithm(this.encryption, this.dataForm.password);\n      let data = this.dataForm;\n      console.log(data);\n      userLogin(data).then(res => {\n        // console.log(res.data);\n        Cookies.set('name', this.dataForm.username);\n        const name = data.username;\n\n        if (res.data.code === 200) {\n          const token = res.data.data.token;\n          localStorage.setItem('token', token); //保存token到本地浏览器\n\n          this.$message({\n            message: \"恭喜你，登录成功！欢迎用户: \" + name,\n            type: \"success\"\n          });\n          this.$router.push({\n            name: 'Home'\n          });\n        } else if (res.data.code === 400) {\n          this.$message.error(\"用户名或密码错误，请重新输入！\");\n        }\n      });\n    },\n\n    //忘记密码\n    gotoretrieve() {\n      let location = {\n        name: \"Home\"\n      };\n      this.$router.push(location);\n    },\n\n    getencryption() {\n      getPublicKey().then(res => {\n        console.log(res);\n        console.log(this.encryption);\n\n        if (res.data.code === 200) {\n          this.encryption = res.data.data.data;\n        }\n      });\n    }\n\n  },\n\n  mounted() {\n    this.getencryption();\n  }\n\n};","map":{"version":3,"mappings":"AAoEA;AACA;AACA;AACA;AAEA;EACAA,iBADA;;EAEAC;IACA;MACAC,qBADA;MACA;MACAC,eAFA;MAEA;MACAC,oBAHA;MAGA;MACAC,6BAJA;MAKAC,cALA;MAMAC;QACAC,YADA;QACA;QACAC,YAFA;QAEA;QACAC,SAHA;QAGA;QACAC,WAJA,CAIA;;MAJA;IANA;EAaA,CAhBA;;EAiBAC;IACA;IACAC;MACA;QAAAL;QAAAC;MAAA;MACA;IACA;;EALA,CAjBA;EAwBAK;IACA;IACAC;MACA;IACA,CAJA;;IAKA;IACAC;MACA;QAAAhB;MAAA;MACA;IACA,CATA;;IAUA;IACAiB;MACAC;MACA;MACA;MACAA;MACAC;QACA;QACAC;QACA;;QACA;UACA;UACAC,qCAFA,CAEA;;UACA;YACAC,iCADA;YAEAC;UAFA;UAIA;YAAAvB;UAAA;QACA,CARA,MAQA;UACA;QACA;MACA,CAfA;IAkBA,CAlCA;;IAmCA;IACAwB;MACA;QAAAxB;MAAA;MACA;IACA,CAvCA;;IAwCAyB;MACAC;QACAR;QACAA;;QACA;UACA;QACA;MACA,CANA;IAOA;;EAhDA,CAxBA;;EA0EAS;IACA;EACA;;AA5EA","names":["name","data","automaticLogin","sendTimeCode","bVerification","verificationCodeInfo","encryption","dataForm","username","password","phone","smsCode","computed","canSubmit","methods","submitLogin","backHome","goToLogin","console","userLogin","Cookies","localStorage","message","type","gotoretrieve","getencryption","getPublicKey","mounted"],"sourceRoot":"src/views","sources":["loginView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <vue-particles color=\"#e8f659\" :particleOpacity=\"0.7\" :particlesNumber=\"60\" shapeType=\"circle\" :particleSize=\"6\"\r\n      linesColor=\"#e8f659\" :linesWidth=\"1\" :lineLinked=\"true\" :lineOpacity=\"0.4\" :linesDistance=\"150\" :moveSpeed=\"3\"\r\n      :hoverEffect=\"true\" hoverMode=\"grab\" :clickEffect=\"true\" clickMode=\"push\">\r\n    </vue-particles>\r\n    <div class=\"register_container\">\r\n      <div class=\"register_box\">\r\n\r\n        <div class=\"avatar_box\">\r\n          <img src=\"../assets/Img/LoginImg/tx.jpg\" alt=\"\" />\r\n        </div>\r\n\r\n        <el-form label-width=\"0px\" class=\"login_in\" @keyup.enter.native=\"goToLogin\">\r\n\r\n          <div class=\"navSelect\">\r\n            <div class=\"select-left\">\r\n              <div class=\"left-btn\">账号登录</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-info\" ref=\"dataForm\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input type=\"text\" prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"dataForm.username\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n              <el-input type=\"password\" prefix-icon=\"el-icon-thumb\" placeholder=\"请输入密码\" v-model=\"dataForm.password\">\r\n              </el-input>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"tablenav\">\r\n            <div class=\"navleft\">\r\n              <div class=\"leftbtn\">\r\n                <div :class=\"automaticLogin === false ? 'dashDiv' : 'dashDivSelectd'\">\r\n                  <span class=\"dashSpan\" @click=\"submitLogin\"></span>\r\n                </div>\r\n                <div class=\"prompt\">自动登录</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"navright\">\r\n              <div class=\"prompt\" @click=\"gotoretrieve\">忘记密码</div>\r\n            </div>\r\n          </div>\r\n\r\n          <el-form-item class=\"btns\">\r\n            <el-button type=\"primary\" @click=\"goToLogin\" :disabled=\"!canSubmit\">登&nbsp;&nbsp;&nbsp;&nbsp;录</el-button>\r\n            <!-- <el-button type=\"primary\">注册</el-button> -->\r\n          </el-form-item>\r\n\r\n          <div class=\"stytem\">\r\n            <div class=\"stytem-left\">\r\n              <div class=\"lefttitle\" @click=\"backHome()\">返回首页</div>\r\n            </div>\r\n            <div class=\"stytem-right\">\r\n              <div class=\"righttitle\">\r\n                <router-link :to=\"{ name: 'registerView' }\">用户注册</router-link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Cookies from 'js-cookie';\r\nimport { userLogin } from '@/Servers/ServersApi';\r\nimport {getPublicKey} from  '@/Servers/encryption';\r\nimport {CryAlgorithm} from '../encryption/index'\r\n\r\nexport default {\r\n  name: \"loginView\",\r\n  data() {\r\n    return {\r\n      automaticLogin: false, //自动登录\r\n      sendTimeCode: 5,      //再次发送的时间\r\n      bVerification: false,   //节流阀，控制点击获取验证码\r\n      verificationCodeInfo: \"发送验证码\",\r\n      encryption:'',\r\n      dataForm: {\r\n        username: '', //账号\r\n        password: '', //密码\r\n        phone: '',         //手机号\r\n        smsCode: '',  //验证码  \r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    //判断提交\r\n    canSubmit() {\r\n      const { username, password } = this.dataForm\r\n      return Boolean(username && password)\r\n    }\r\n  },\r\n  methods: {\r\n    //是否自动登录\r\n    submitLogin() {\r\n      this.automaticLogin = !this.automaticLogin;\r\n    },\r\n    //返回首页\r\n    backHome() {\r\n      let location = { name: \"Home\" };\r\n      this.$router.push(location);\r\n    },\r\n    //登录 \r\n    goToLogin() {\r\n      console.log(this.encryption);\r\n      this.dataForm.password = CryAlgorithm(this.encryption,this.dataForm.password)\r\n      let data = this.dataForm\r\n      console.log(data);\r\n      userLogin(data).then(res => {\r\n        // console.log(res.data);\r\n        Cookies.set('name', this.dataForm.username)\r\n        const name = data.username\r\n        if (res.data.code === 200) {\r\n        const token = res.data.data.token\r\n        localStorage.setItem('token', token)  //保存token到本地浏览器\r\n          this.$message({\r\n            message: \"恭喜你，登录成功！欢迎用户: \" + name,\r\n            type: \"success\",\r\n          })\r\n          this.$router.push({ name: 'Home' })\r\n        }else if (res.data.code === 400) {\r\n          this.$message.error(\"用户名或密码错误，请重新输入！\")\r\n        }\r\n      })\r\n\r\n\r\n    },\r\n    //忘记密码\r\n    gotoretrieve(){\r\n      let location = { name: \"Home\" };\r\n      this.$router.push(location);\r\n    },\r\n    getencryption(){\r\n      getPublicKey().then((res)=>{\r\n        console.log(res);\r\n        console.log(this.encryption);\r\n        if(res.data.code === 200){\r\n          this.encryption = res.data.data.data\r\n        }\r\n      })\r\n    }\r\n  },\r\n  mounted(){\r\n    this.getencryption();\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n#particles-js {\r\n  width: 100%;\r\n  height: calc(100%);\r\n  position: absolute;\r\n  background-image: url(\"../assets/Img/LoginImg/background.png\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\n.register_container {\r\n  z-index: 55;\r\n  background-color: #42b983;\r\n  height: 100%;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 14px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.register_box {\r\n  width: 450px;\r\n  height: 300px;\r\n  border-radius: 3px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  .avatar_box {\r\n    height: 130px;\r\n    width: 130px;\r\n    border: 1px solid #eee;\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 10px #ddd;\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #fff;\r\n    padding: 10px;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 50%;\r\n      background-color: #eee;\r\n    }\r\n  }\r\n}\r\n\r\n.btns {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.login_in {\r\n  z-index: 999;\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n\r\n  //选择方式\r\n  .navSelect {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    color: #ffffff;\r\n    font-size: 18px;\r\n    font-family: \"楷体\";\r\n\r\n    .select-left {\r\n      position: relative;\r\n      margin-left: 50px;\r\n      cursor: pointer;\r\n\r\n      .btn-selected {\r\n        position: absolute;\r\n        width: 60px;\r\n        height: 2px;\r\n        bottom: -1px;\r\n        left: 9px;\r\n        background-color: #ffffff;\r\n      }\r\n    }\r\n\r\n    .select-right {\r\n      position: relative;\r\n      margin-right: 50px;\r\n      cursor: pointer;\r\n\r\n      .btn-selected {\r\n        position: absolute;\r\n        width: 60px;\r\n        height: 2px;\r\n        bottom: -1px;\r\n        right: 9px;\r\n        background-color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .verification {\r\n\r\n    //验证码登录的输入框\r\n    .el-input {\r\n      width: 240px;\r\n    }\r\n\r\n    .getVerificationCode {\r\n      position: absolute;\r\n      width: 100px;\r\n      height: 40px;\r\n      top: 0px;\r\n      right: 20px;\r\n      border-radius: 4px;\r\n      text-align: center;\r\n      cursor: pointer;\r\n      color: #ffffff;\r\n      background-color: #409eff;\r\n    }\r\n  }\r\n\r\n  .tablenav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-family: \"楷体\";\r\n\r\n    .navleft {\r\n      margin-left: 30px;\r\n\r\n      .leftbtn {\r\n        display: flex;\r\n\r\n        //未选中状态\r\n        .dashDiv {\r\n          border-radius: 1.8667rem;\r\n          border: 0.03rem solid #cbcbcb;\r\n          background-color: #dad6d6;\r\n          width: 42px;\r\n          height: 16px;\r\n          margin-top: 0.26rem;\r\n          margin-right: 0.4rem;\r\n          box-sizing: border-box;\r\n        }\r\n\r\n        .dashDiv .dashSpan {\r\n          border-radius: 7px;\r\n          border: 0.03rem solid #cbcbcb;\r\n          background-color: #ffffff;\r\n          float: left;\r\n          margin-left: 0.04rem;\r\n          margin-top: 0.019rem;\r\n          width: 24px;\r\n          height: 14px;\r\n          box-sizing: border-box;\r\n        }\r\n\r\n        /*选中状态*/\r\n        .dashDivSelectd {\r\n          background-color: #4cd964;\r\n          transition: 0.5s;\r\n          border-radius: 1.8667rem;\r\n          border: 0.03rem solid #ffffff;\r\n          width: 42px;\r\n          height: 16px;\r\n          margin-top: 0.26rem;\r\n          margin-right: 0.4rem;\r\n          box-sizing: border-box;\r\n        }\r\n\r\n        .dashDivSelectd .dashSpan {\r\n          border-radius: 7px;\r\n          border: 0.03rem solid #ffffff;\r\n          background-color: #ffffff;\r\n          float: right;\r\n          margin-right: 0.04rem;\r\n          margin-top: 0.019rem;\r\n          width: 24px;\r\n          height: 14px;\r\n          box-sizing: border-box;\r\n        }\r\n      }\r\n    }\r\n\r\n    .navright {\r\n      margin-right: 30px;\r\n    }\r\n\r\n    .prompt {\r\n      margin-top: 1px;\r\n      color: #ffffff;\r\n      font-size: 18px;\r\n      font-family: 楷体;\r\n    }\r\n  }\r\n\r\n  //选择链接 \r\n  .stytem {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-content: center;\r\n\r\n    .stytem-left {\r\n      .lefttitle {\r\n        margin-left: 35px;\r\n        font-size: 14px;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n\r\n    .stytem-right {\r\n      .righttitle {\r\n        margin-right: 35px;\r\n        font-size: 14px;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n\r\n    .righttitle:hover {\r\n      color: rgb(236, 60, 11);\r\n      cursor: pointer;\r\n    }\r\n\r\n    .lefttitle:hover {\r\n      color: rgb(236, 60, 11);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .prompt:hover {\r\n    color: rgb(236, 60, 11);\r\n    cursor: pointer;\r\n  }\r\n\r\n  //修改了button的形式 \r\n  .el-button {\r\n    padding: 12px 110px;\r\n  }\r\n\r\n  //修改输入框大小 \r\n  .el-input {\r\n    left: 7%;\r\n    width: 360px;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}