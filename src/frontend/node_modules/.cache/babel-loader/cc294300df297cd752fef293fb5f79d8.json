{"ast":null,"code":"'use strict';\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar Prefixer = require('./prefixer');\n\nvar Browsers = require('./browsers');\n\nvar utils = require('./utils');\n\nvar Declaration = function (_Prefixer) {\n  _inherits(Declaration, _Prefixer);\n\n  function Declaration() {\n    _classCallCheck(this, Declaration);\n\n    return _possibleConstructorReturn(this, _Prefixer.apply(this, arguments));\n  }\n  /**\n   * Always true, because we already get prefixer by property name\n   */\n\n\n  Declaration.prototype.check = function check()\n  /* decl */\n  {\n    return true;\n  };\n  /**\n   * Return prefixed version of property\n   */\n\n\n  Declaration.prototype.prefixed = function prefixed(prop, prefix) {\n    return prefix + prop;\n  };\n  /**\n   * Return unprefixed version of property\n   */\n\n\n  Declaration.prototype.normalize = function normalize(prop) {\n    return prop;\n  };\n  /**\n   * Check `value`, that it contain other prefixes, rather than `prefix`\n   */\n\n\n  Declaration.prototype.otherPrefixes = function otherPrefixes(value, prefix) {\n    for (var _iterator = Browsers.prefixes(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var other = _ref;\n\n      if (other === prefix) {\n        continue;\n      }\n\n      if (value.indexOf(other) !== -1) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Set prefix to declaration\n   */\n\n\n  Declaration.prototype.set = function set(decl, prefix) {\n    decl.prop = this.prefixed(decl.prop, prefix);\n    return decl;\n  };\n  /**\n   * Should we use visual cascade for prefixes\n   */\n\n\n  Declaration.prototype.needCascade = function needCascade(decl) {\n    if (!decl._autoprefixerCascade) {\n      decl._autoprefixerCascade = this.all.options.cascade !== false && decl.raw('before').indexOf('\\n') !== -1;\n    }\n\n    return decl._autoprefixerCascade;\n  };\n  /**\n   * Return maximum length of possible prefixed property\n   */\n\n\n  Declaration.prototype.maxPrefixed = function maxPrefixed(prefixes, decl) {\n    if (decl._autoprefixerMax) {\n      return decl._autoprefixerMax;\n    }\n\n    var max = 0;\n\n    for (var _iterator2 = prefixes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var prefix = _ref2;\n      prefix = utils.removeNote(prefix);\n\n      if (prefix.length > max) {\n        max = prefix.length;\n      }\n    }\n\n    decl._autoprefixerMax = max;\n    return decl._autoprefixerMax;\n  };\n  /**\n   * Calculate indentation to create visual cascade\n   */\n\n\n  Declaration.prototype.calcBefore = function calcBefore(prefixes, decl) {\n    var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var max = this.maxPrefixed(prefixes, decl);\n    var diff = max - utils.removeNote(prefix).length;\n    var before = decl.raw('before');\n\n    if (diff > 0) {\n      before += Array(diff).fill(' ').join('');\n    }\n\n    return before;\n  };\n  /**\n   * Remove visual cascade\n   */\n\n\n  Declaration.prototype.restoreBefore = function restoreBefore(decl) {\n    var lines = decl.raw('before').split('\\n');\n    var min = lines[lines.length - 1];\n    this.all.group(decl).up(function (prefixed) {\n      var array = prefixed.raw('before').split('\\n');\n      var last = array[array.length - 1];\n\n      if (last.length < min.length) {\n        min = last;\n      }\n    });\n    lines[lines.length - 1] = min;\n    decl.raws.before = lines.join('\\n');\n  };\n  /**\n   * Clone and insert new declaration\n   */\n\n\n  Declaration.prototype.insert = function insert(decl, prefix, prefixes) {\n    var cloned = this.set(this.clone(decl), prefix);\n    if (!cloned) return undefined;\n    var already = decl.parent.some(function (i) {\n      return i.prop === cloned.prop && i.value === cloned.value;\n    });\n\n    if (already) {\n      return undefined;\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n\n    return decl.parent.insertBefore(decl, cloned);\n  };\n  /**\n   * Did this declaration has this prefix above\n   */\n\n\n  Declaration.prototype.isAlready = function isAlready(decl, prefixed) {\n    var already = this.all.group(decl).up(function (i) {\n      return i.prop === prefixed;\n    });\n\n    if (!already) {\n      already = this.all.group(decl).down(function (i) {\n        return i.prop === prefixed;\n      });\n    }\n\n    return already;\n  };\n  /**\n   * Clone and add prefixes for declaration\n   */\n\n\n  Declaration.prototype.add = function add(decl, prefix, prefixes, result) {\n    var prefixed = this.prefixed(decl.prop, prefix);\n\n    if (this.isAlready(decl, prefixed) || this.otherPrefixes(decl.value, prefix)) {\n      return undefined;\n    }\n\n    return this.insert(decl, prefix, prefixes, result);\n  };\n  /**\n   * Add spaces for visual cascade\n   */\n\n\n  Declaration.prototype.process = function process(decl, result) {\n    if (!this.needCascade(decl)) {\n      _Prefixer.prototype.process.call(this, decl, result);\n\n      return;\n    }\n\n    var prefixes = _Prefixer.prototype.process.call(this, decl, result);\n\n    if (!prefixes || !prefixes.length) {\n      return;\n    }\n\n    this.restoreBefore(decl);\n    decl.raws.before = this.calcBefore(prefixes, decl);\n  };\n  /**\n   * Return list of prefixed properties to clean old prefixes\n   */\n\n\n  Declaration.prototype.old = function old(prop, prefix) {\n    return [this.prefixed(prop, prefix)];\n  };\n\n  return Declaration;\n}(Prefixer);\n\nmodule.exports = Declaration;","map":{"version":3,"names":["_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","setPrototypeOf","Prefixer","require","Browsers","utils","Declaration","_Prefixer","apply","arguments","check","prefixed","prop","prefix","normalize","otherPrefixes","_iterator","prefixes","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","other","indexOf","set","decl","needCascade","_autoprefixerCascade","all","options","cascade","raw","maxPrefixed","_autoprefixerMax","max","_iterator2","_isArray2","_i2","_ref2","removeNote","calcBefore","diff","before","fill","join","restoreBefore","lines","split","min","group","up","array","last","raws","insert","cloned","clone","already","parent","some","insertBefore","isAlready","down","add","result","process","old","module","exports"],"sources":["C:/Users/Administrator/Desktop/code/computer-system/src/frontend/node_modules/autoprefixer/lib/declaration.js"],"sourcesContent":["'use strict';\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }\n\nvar Prefixer = require('./prefixer');\nvar Browsers = require('./browsers');\nvar utils = require('./utils');\n\nvar Declaration = function (_Prefixer) {\n    _inherits(Declaration, _Prefixer);\n\n    function Declaration() {\n        _classCallCheck(this, Declaration);\n\n        return _possibleConstructorReturn(this, _Prefixer.apply(this, arguments));\n    }\n\n    /**\n     * Always true, because we already get prefixer by property name\n     */\n    Declaration.prototype.check = function check() /* decl */{\n        return true;\n    };\n\n    /**\n     * Return prefixed version of property\n     */\n\n\n    Declaration.prototype.prefixed = function prefixed(prop, prefix) {\n        return prefix + prop;\n    };\n\n    /**\n     * Return unprefixed version of property\n     */\n\n\n    Declaration.prototype.normalize = function normalize(prop) {\n        return prop;\n    };\n\n    /**\n     * Check `value`, that it contain other prefixes, rather than `prefix`\n     */\n\n\n    Declaration.prototype.otherPrefixes = function otherPrefixes(value, prefix) {\n        for (var _iterator = Browsers.prefixes(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref = _iterator[_i++];\n            } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref = _i.value;\n            }\n\n            var other = _ref;\n\n            if (other === prefix) {\n                continue;\n            }\n            if (value.indexOf(other) !== -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /**\n     * Set prefix to declaration\n     */\n\n\n    Declaration.prototype.set = function set(decl, prefix) {\n        decl.prop = this.prefixed(decl.prop, prefix);\n        return decl;\n    };\n\n    /**\n     * Should we use visual cascade for prefixes\n     */\n\n\n    Declaration.prototype.needCascade = function needCascade(decl) {\n        if (!decl._autoprefixerCascade) {\n            decl._autoprefixerCascade = this.all.options.cascade !== false && decl.raw('before').indexOf('\\n') !== -1;\n        }\n        return decl._autoprefixerCascade;\n    };\n\n    /**\n     * Return maximum length of possible prefixed property\n     */\n\n\n    Declaration.prototype.maxPrefixed = function maxPrefixed(prefixes, decl) {\n        if (decl._autoprefixerMax) {\n            return decl._autoprefixerMax;\n        }\n\n        var max = 0;\n        for (var _iterator2 = prefixes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n            } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n            }\n\n            var prefix = _ref2;\n\n            prefix = utils.removeNote(prefix);\n            if (prefix.length > max) {\n                max = prefix.length;\n            }\n        }\n        decl._autoprefixerMax = max;\n\n        return decl._autoprefixerMax;\n    };\n\n    /**\n     * Calculate indentation to create visual cascade\n     */\n\n\n    Declaration.prototype.calcBefore = function calcBefore(prefixes, decl) {\n        var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n        var max = this.maxPrefixed(prefixes, decl);\n        var diff = max - utils.removeNote(prefix).length;\n\n        var before = decl.raw('before');\n        if (diff > 0) {\n            before += Array(diff).fill(' ').join('');\n        }\n\n        return before;\n    };\n\n    /**\n     * Remove visual cascade\n     */\n\n\n    Declaration.prototype.restoreBefore = function restoreBefore(decl) {\n        var lines = decl.raw('before').split('\\n');\n        var min = lines[lines.length - 1];\n\n        this.all.group(decl).up(function (prefixed) {\n            var array = prefixed.raw('before').split('\\n');\n            var last = array[array.length - 1];\n            if (last.length < min.length) {\n                min = last;\n            }\n        });\n\n        lines[lines.length - 1] = min;\n        decl.raws.before = lines.join('\\n');\n    };\n\n    /**\n     * Clone and insert new declaration\n     */\n\n\n    Declaration.prototype.insert = function insert(decl, prefix, prefixes) {\n        var cloned = this.set(this.clone(decl), prefix);\n        if (!cloned) return undefined;\n\n        var already = decl.parent.some(function (i) {\n            return i.prop === cloned.prop && i.value === cloned.value;\n        });\n        if (already) {\n            return undefined;\n        }\n\n        if (this.needCascade(decl)) {\n            cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        return decl.parent.insertBefore(decl, cloned);\n    };\n\n    /**\n     * Did this declaration has this prefix above\n     */\n\n\n    Declaration.prototype.isAlready = function isAlready(decl, prefixed) {\n        var already = this.all.group(decl).up(function (i) {\n            return i.prop === prefixed;\n        });\n        if (!already) {\n            already = this.all.group(decl).down(function (i) {\n                return i.prop === prefixed;\n            });\n        }\n        return already;\n    };\n\n    /**\n     * Clone and add prefixes for declaration\n     */\n\n\n    Declaration.prototype.add = function add(decl, prefix, prefixes, result) {\n        var prefixed = this.prefixed(decl.prop, prefix);\n        if (this.isAlready(decl, prefixed) || this.otherPrefixes(decl.value, prefix)) {\n            return undefined;\n        }\n        return this.insert(decl, prefix, prefixes, result);\n    };\n\n    /**\n     * Add spaces for visual cascade\n     */\n\n\n    Declaration.prototype.process = function process(decl, result) {\n        if (!this.needCascade(decl)) {\n            _Prefixer.prototype.process.call(this, decl, result);\n            return;\n        }\n\n        var prefixes = _Prefixer.prototype.process.call(this, decl, result);\n\n        if (!prefixes || !prefixes.length) {\n            return;\n        }\n\n        this.restoreBefore(decl);\n        decl.raws.before = this.calcBefore(prefixes, decl);\n    };\n\n    /**\n     * Return list of prefixed properties to clean old prefixes\n     */\n\n\n    Declaration.prototype.old = function old(prop, prefix) {\n        return [this.prefixed(prop, prefix)];\n    };\n\n    return Declaration;\n}(Prefixer);\n\nmodule.exports = Declaration;"],"mappings":"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"},"metadata":{},"sourceType":"module"}