{"ast":null,"code":"var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nexport function int2char(n) {\n  return BI_RM.charAt(n);\n} //#region BIT_OPERATIONS\n// (public) this & a\n\nexport function op_and(x, y) {\n  return x & y;\n} // (public) this | a\n\nexport function op_or(x, y) {\n  return x | y;\n} // (public) this ^ a\n\nexport function op_xor(x, y) {\n  return x ^ y;\n} // (public) this & ~a\n\nexport function op_andnot(x, y) {\n  return x & ~y;\n} // return index of lowest 1-bit in x, x < 2^31\n\nexport function lbit(x) {\n  if (x == 0) {\n    return -1;\n  }\n\n  var r = 0;\n\n  if ((x & 0xffff) == 0) {\n    x >>= 16;\n    r += 16;\n  }\n\n  if ((x & 0xff) == 0) {\n    x >>= 8;\n    r += 8;\n  }\n\n  if ((x & 0xf) == 0) {\n    x >>= 4;\n    r += 4;\n  }\n\n  if ((x & 3) == 0) {\n    x >>= 2;\n    r += 2;\n  }\n\n  if ((x & 1) == 0) {\n    ++r;\n  }\n\n  return r;\n} // return number of 1 bits in x\n\nexport function cbit(x) {\n  var r = 0;\n\n  while (x != 0) {\n    x &= x - 1;\n    ++r;\n  }\n\n  return r;\n} //#endregion BIT_OPERATIONS","map":{"version":3,"names":["BI_RM","int2char","n","charAt","op_and","x","y","op_or","op_xor","op_andnot","lbit","r","cbit"],"sources":["C:/Users/3HENRY/Desktop/web2/computer-system/src/frontend/node_modules/jsencrypt/lib/lib/jsbn/util.js"],"sourcesContent":["var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nexport function int2char(n) {\n    return BI_RM.charAt(n);\n}\n//#region BIT_OPERATIONS\n// (public) this & a\nexport function op_and(x, y) {\n    return x & y;\n}\n// (public) this | a\nexport function op_or(x, y) {\n    return x | y;\n}\n// (public) this ^ a\nexport function op_xor(x, y) {\n    return x ^ y;\n}\n// (public) this & ~a\nexport function op_andnot(x, y) {\n    return x & ~y;\n}\n// return index of lowest 1-bit in x, x < 2^31\nexport function lbit(x) {\n    if (x == 0) {\n        return -1;\n    }\n    var r = 0;\n    if ((x & 0xffff) == 0) {\n        x >>= 16;\n        r += 16;\n    }\n    if ((x & 0xff) == 0) {\n        x >>= 8;\n        r += 8;\n    }\n    if ((x & 0xf) == 0) {\n        x >>= 4;\n        r += 4;\n    }\n    if ((x & 3) == 0) {\n        x >>= 2;\n        r += 2;\n    }\n    if ((x & 1) == 0) {\n        ++r;\n    }\n    return r;\n}\n// return number of 1 bits in x\nexport function cbit(x) {\n    var r = 0;\n    while (x != 0) {\n        x &= x - 1;\n        ++r;\n    }\n    return r;\n}\n//#endregion BIT_OPERATIONS\n"],"mappings":"AAAA,IAAIA,KAAK,GAAG,sCAAZ;AACA,OAAO,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;EACxB,OAAOF,KAAK,CAACG,MAAN,CAAaD,CAAb,CAAP;AACH,C,CACD;AACA;;AACA,OAAO,SAASE,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;EACzB,OAAOD,CAAC,GAAGC,CAAX;AACH,C,CACD;;AACA,OAAO,SAASC,KAAT,CAAeF,CAAf,EAAkBC,CAAlB,EAAqB;EACxB,OAAOD,CAAC,GAAGC,CAAX;AACH,C,CACD;;AACA,OAAO,SAASE,MAAT,CAAgBH,CAAhB,EAAmBC,CAAnB,EAAsB;EACzB,OAAOD,CAAC,GAAGC,CAAX;AACH,C,CACD;;AACA,OAAO,SAASG,SAAT,CAAmBJ,CAAnB,EAAsBC,CAAtB,EAAyB;EAC5B,OAAOD,CAAC,GAAG,CAACC,CAAZ;AACH,C,CACD;;AACA,OAAO,SAASI,IAAT,CAAcL,CAAd,EAAiB;EACpB,IAAIA,CAAC,IAAI,CAAT,EAAY;IACR,OAAO,CAAC,CAAR;EACH;;EACD,IAAIM,CAAC,GAAG,CAAR;;EACA,IAAI,CAACN,CAAC,GAAG,MAAL,KAAgB,CAApB,EAAuB;IACnBA,CAAC,KAAK,EAAN;IACAM,CAAC,IAAI,EAAL;EACH;;EACD,IAAI,CAACN,CAAC,GAAG,IAAL,KAAc,CAAlB,EAAqB;IACjBA,CAAC,KAAK,CAAN;IACAM,CAAC,IAAI,CAAL;EACH;;EACD,IAAI,CAACN,CAAC,GAAG,GAAL,KAAa,CAAjB,EAAoB;IAChBA,CAAC,KAAK,CAAN;IACAM,CAAC,IAAI,CAAL;EACH;;EACD,IAAI,CAACN,CAAC,GAAG,CAAL,KAAW,CAAf,EAAkB;IACdA,CAAC,KAAK,CAAN;IACAM,CAAC,IAAI,CAAL;EACH;;EACD,IAAI,CAACN,CAAC,GAAG,CAAL,KAAW,CAAf,EAAkB;IACd,EAAEM,CAAF;EACH;;EACD,OAAOA,CAAP;AACH,C,CACD;;AACA,OAAO,SAASC,IAAT,CAAcP,CAAd,EAAiB;EACpB,IAAIM,CAAC,GAAG,CAAR;;EACA,OAAON,CAAC,IAAI,CAAZ,EAAe;IACXA,CAAC,IAAIA,CAAC,GAAG,CAAT;IACA,EAAEM,CAAF;EACH;;EACD,OAAOA,CAAP;AACH,C,CACD"},"metadata":{},"sourceType":"module"}