import type { PropType } from "vue";
import type { Container, ISourceOptions, Engine } from "tsparticles-engine";
export declare type IParticlesProps = ISourceOptions;
export declare type IParticlesParams = IParticlesProps;
declare const _sfc_main: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        required: true;
    };
    options: {
        type: PropType<import("tsparticles-engine").RecursivePartial<import("tsparticles-engine").IOptions>>;
    };
    url: {
        type: StringConstructor;
    };
    particlesLoaded: {
        type: PropType<(container: Container) => void>;
    };
    particlesInit: {
        type: PropType<(engine: Engine) => void>;
    };
}, unknown, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: true;
    };
    options: {
        type: PropType<import("tsparticles-engine").RecursivePartial<import("tsparticles-engine").IOptions>>;
    };
    url: {
        type: StringConstructor;
    };
    particlesLoaded: {
        type: PropType<(container: Container) => void>;
    };
    particlesInit: {
        type: PropType<(engine: Engine) => void>;
    };
}>>, {}>;
export default _sfc_main;
