{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getCheckTreeList } from \"@/utils/getTreeList\";\nimport { lookRole, getTree, saveTree } from \"@/services/systemManage\";\nimport AddPermissPopup from \"../permissTreePopup/addPermissPopup.vue\";\nimport deletePermissPopup from \"../permissTreePopup/deletePermissPopup.vue\";\nimport addTopPermissPopup from \"../permissTreePopup/addTopPermissPopup.vue\";\nimport editPermissPopup from \"../permissTreePopup/editPermissPopup.vue\";\nexport default {\n  name: \"permissionsTree\",\n  data() {\n    return {\n      Tree: [],\n      //所有的权限构成的树形结构\n      roleTree: [],\n      //角色携带的相关权限\n      isShowTree: false,\n      //权限树是否展示\n      modifyRight: [],\n      //修改后的权限保存\n      roleName: \"\",\n      //角色的Id,由父组件调用方法传递进来,为-1表示编辑权限,其他为编辑角色权限\n      roleId: -1\n    };\n  },\n  components: {\n    AddPermissPopup,\n    deletePermissPopup,\n    addTopPermissPopup,\n    editPermissPopup\n  },\n  mounted() {\n    this.getPermissionsTree();\n  },\n  methods: {\n    //获取一个角色已有的权限\n    showTreeList(roleId, roleList, roleName) {\n      this.$refs.tree.setCheckedKeys([]); //清空上一个角色遗留的权限\n      //-1表示是编辑权限树\n      if (roleId === -1) {\n        this.roleId = roleId;\n        console.log(this.roleId);\n        this.isShowTree = true;\n        return;\n      } else {\n        this.roleName = roleName;\n        this.roleTree = [];\n        this.roleId = roleId;\n        lookRole(roleId).then(res => {\n          if (res.data.code === 200) {\n            let data = res.data.data;\n            data.forEach(item => {\n              if (item.level === 4) {\n                roleList.push(item.menuId);\n              }\n            });\n            console.log(\"check\", this.roleTree);\n            this.roleTree = roleList;\n            this.isShowTree = true;\n          } else if (res.data.code === 417) {\n            this.roleTree = [];\n            console.log(typeof this.roleTree);\n            this.isShowTree = true;\n          }\n        });\n      }\n    },\n    //获取所有的权限\n    getPermissionsTree() {\n      getTree().then(res => {\n        if (res.data.code === 200) {\n          this.Tree = res.data.data;\n        }\n      });\n    },\n    //获取所有打了勾的权限\n    getCheckedNodes() {\n      let data = getCheckTreeList(this.$refs.tree.getCheckedNodes(), this.modifyRight);\n      this.modifyRight = data;\n    },\n    //获取半勾状态下的权限\n    getHalfCheckedNodes() {\n      let data = getCheckTreeList(this.$refs.tree.getHalfCheckedNodes(), this.modifyRight);\n      this.modifyRight = data;\n    },\n    //保存角色修改的权限\n    saveRole() {\n      console.log(123);\n      this.getCheckedNodes();\n      this.getHalfCheckedNodes();\n      let data = {};\n      data.roleId = this.roleId;\n      data.menuList = this.modifyRight;\n      saveTree(data).then(res => {\n        if (res.data.code === 200) {\n          this.$message.success(\"修改角色权限成功！\");\n          this.isShowTree = false;\n        } else {\n          this.$message.error(\"修改角色权限失败,请重新操作！\");\n        }\n        this.modifyRight = [];\n      });\n    },\n    //用来删除按钮或菜单\n    deletePermissionNode(primiseItem) {\n      this.$refs.deletePermissPopup.showDialog(\"删除权限\", primiseItem);\n    },\n    //添加权限菜单菜单\n    addPermissionNode(primiseItem) {\n      if (primiseItem.level === 1) {\n        this.$refs.AddPermissPopup.showDialog(\"添加一级菜单\", primiseItem);\n      } else if (primiseItem.level === 2) {\n        this.$refs.AddPermissPopup.showDialog(\"添加二级菜单\", primiseItem);\n      } else if (primiseItem.level === 3) {\n        this.$refs.AddPermissPopup.showDialog(\"添加按钮菜单\", primiseItem);\n      } else {\n        //level为4表示的是按钮权限,\n        this.$message.error(\"按钮权限不能在添加权限！！\");\n      }\n    },\n    //用于添加顶级菜单权限\n    addTopMenu() {\n      this.$refs.addTopPermissPopup.showDialog(\"添加顶级菜单\");\n    },\n    //用于编辑按钮或菜单\n    editPermissionNode(primiseItem) {\n      this.$refs.editPermissPopup.showDialog(\"编辑菜单信息\", primiseItem.menuId);\n    }\n  }\n};","map":{"version":3,"mappings":";AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MACA;MACAC;IACA;EACA;EACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;MACA;MACA;QACA;QACAC;QACA;QACA;MACA;QACA;QACA;QACA;QACAC;UACA;YACA;YACAhB;cACA;gBACAiB;cACA;YACA;YACAF;YACA;YACA;UACA;YACA;YACAA;YACA;UACA;QACA;MACA;IACA;IACA;IACAG;MACAC;QACA;UACA;QACA;MACA;IACA;IACA;IACAC;MACA,4BACA,mCACA,iBACA;MACA;IACA;IACA;IACAC;MACA,4BACA,uCACA,iBACA;MACA;IACA;IACA;IACAC;MACAP;MACA;MACA;MACA;MACAf;MACAA;MACAuB;QACA;UACA;UACA;QACA;UACA;QACA;QACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;QACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA,uCACA,UACAC,mBACA;IACA;EACA;AACA","names":["name","data","Tree","roleTree","isShowTree","modifyRight","roleName","roleId","components","AddPermissPopup","deletePermissPopup","addTopPermissPopup","editPermissPopup","mounted","methods","showTreeList","console","lookRole","roleList","getPermissionsTree","getTree","getCheckedNodes","getHalfCheckedNodes","saveRole","saveTree","deletePermissionNode","addPermissionNode","addTopMenu","editPermissionNode","primiseItem"],"sourceRoot":"src/components/permissManage","sources":["permissionsTree.vue"],"sourcesContent":["<template>\r\n  <div class=\"permission_Tree\" v-show=\"isShowTree\">\r\n    <!--roleId不等于-1显示编辑角色  等于-1显示编辑权限树-->\r\n    <div class=\"permission_Header\" v-if=\"roleId !== -1\">\r\n      <el-tag class=\"roleTitle\">编辑的角色是</el-tag>\r\n      <el-tag class=\"roleTitle\" type=\"danger\">{{ roleName }}</el-tag>\r\n      <el-button\r\n        class=\"saveRoleBtn\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-success\"\r\n        size=\"small\"\r\n        @click=\"saveRole\"\r\n        >保存修改</el-button\r\n      >\r\n    </div>\r\n    <div class=\"permission_Header\" v-else>\r\n      <el-button\r\n        class=\"editPermissionBtn\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-plus\"\r\n        size=\"small\"\r\n        @click=\"addTopMenu\"\r\n        >添加顶级菜单</el-button\r\n      >\r\n    </div>\r\n    <el-tree\r\n      class=\"permission_Content\"\r\n      :data=\"Tree\"\r\n      :render-after-expand=\"false\"\r\n      show-checkbox\r\n      node-key=\"menuId\"\r\n      :default-checked-keys=\"roleTree\"\r\n      ref=\"tree\"\r\n    >\r\n      <div class=\"custom-tree-node permission_Main\" slot-scope=\"{ node, data }\">\r\n        <div>{{ node.label }}</div>\r\n        <div class=\"editPermission_Btn\">\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            @click.stop=\"() => addPermissionNode(data)\"\r\n          >\r\n            添加\r\n          </el-button>\r\n          <el-button\r\n            type=\"warning\"\r\n            size=\"mini\"\r\n            @click=\"() => editPermissionNode(data)\"\r\n          >\r\n            编辑\r\n          </el-button>\r\n          <el-button\r\n            type=\"danger\"\r\n            size=\"mini\"\r\n            @click.stop=\"() => deletePermissionNode(data)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </el-tree>\r\n    <AddPermissPopup ref=\"AddPermissPopup\"></AddPermissPopup>\r\n    <deletePermissPopup ref=\"deletePermissPopup\"></deletePermissPopup>\r\n    <addTopPermissPopup ref=\"addTopPermissPopup\"></addTopPermissPopup>\r\n    <editPermissPopup ref=\"editPermissPopup\"></editPermissPopup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCheckTreeList } from \"@/utils/getTreeList\";\r\nimport { lookRole, getTree, saveTree } from \"@/services/systemManage\";\r\nimport AddPermissPopup from \"../permissTreePopup/addPermissPopup.vue\";\r\nimport deletePermissPopup from \"../permissTreePopup/deletePermissPopup.vue\";\r\nimport addTopPermissPopup from \"../permissTreePopup/addTopPermissPopup.vue\";\r\nimport editPermissPopup from \"../permissTreePopup/editPermissPopup.vue\";\r\nexport default {\r\n  name: \"permissionsTree\",\r\n  data() {\r\n    return {\r\n      Tree: [], //所有的权限构成的树形结构\r\n      roleTree: [], //角色携带的相关权限\r\n      isShowTree: false, //权限树是否展示\r\n      modifyRight: [], //修改后的权限保存\r\n      roleName: \"\",\r\n      //角色的Id,由父组件调用方法传递进来,为-1表示编辑权限,其他为编辑角色权限\r\n      roleId: -1,\r\n    };\r\n  },\r\n  components: {\r\n    AddPermissPopup,\r\n    deletePermissPopup,\r\n    addTopPermissPopup,\r\n    editPermissPopup,\r\n  },\r\n  mounted() {\r\n    this.getPermissionsTree();\r\n  },\r\n  methods: {\r\n    //获取一个角色已有的权限\r\n    showTreeList(roleId, roleList, roleName) {\r\n      this.$refs.tree.setCheckedKeys([]); //清空上一个角色遗留的权限\r\n      //-1表示是编辑权限树\r\n      if (roleId === -1) {\r\n        this.roleId = roleId;\r\n        console.log(this.roleId);\r\n        this.isShowTree = true;\r\n        return;\r\n      } else {\r\n        this.roleName = roleName;\r\n        this.roleTree = [];\r\n        this.roleId = roleId;\r\n        lookRole(roleId).then((res) => {\r\n          if (res.data.code === 200) {\r\n            let data = res.data.data;\r\n            data.forEach((item) => {\r\n              if (item.level === 4) {\r\n                roleList.push(item.menuId);\r\n              }\r\n            });\r\n            console.log(\"check\", this.roleTree);\r\n            this.roleTree = roleList;\r\n            this.isShowTree = true;\r\n          } else if (res.data.code === 417) {\r\n            this.roleTree = [];\r\n            console.log(typeof this.roleTree);\r\n            this.isShowTree = true;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    //获取所有的权限\r\n    getPermissionsTree() {\r\n      getTree().then((res) => {\r\n        if (res.data.code === 200) {\r\n          this.Tree = res.data.data;\r\n        }\r\n      });\r\n    },\r\n    //获取所有打了勾的权限\r\n    getCheckedNodes() {\r\n      let data = getCheckTreeList(\r\n        this.$refs.tree.getCheckedNodes(),\r\n        this.modifyRight\r\n      );\r\n      this.modifyRight = data;\r\n    },\r\n    //获取半勾状态下的权限\r\n    getHalfCheckedNodes() {\r\n      let data = getCheckTreeList(\r\n        this.$refs.tree.getHalfCheckedNodes(),\r\n        this.modifyRight\r\n      );\r\n      this.modifyRight = data;\r\n    },\r\n    //保存角色修改的权限\r\n    saveRole() {\r\n      console.log(123);\r\n      this.getCheckedNodes();\r\n      this.getHalfCheckedNodes();\r\n      let data = {};\r\n      data.roleId = this.roleId;\r\n      data.menuList = this.modifyRight;\r\n      saveTree(data).then((res) => {\r\n        if (res.data.code === 200) {\r\n          this.$message.success(\"修改角色权限成功！\");\r\n          this.isShowTree = false;\r\n        } else {\r\n          this.$message.error(\"修改角色权限失败,请重新操作！\");\r\n        }\r\n        this.modifyRight = [];\r\n      });\r\n    },\r\n    //用来删除按钮或菜单\r\n    deletePermissionNode(primiseItem) {\r\n      this.$refs.deletePermissPopup.showDialog(\"删除权限\", primiseItem);\r\n    },\r\n    //添加权限菜单菜单\r\n    addPermissionNode(primiseItem) {\r\n      if (primiseItem.level === 1) {\r\n        this.$refs.AddPermissPopup.showDialog(\"添加一级菜单\", primiseItem);\r\n      } else if (primiseItem.level === 2) {\r\n        this.$refs.AddPermissPopup.showDialog(\"添加二级菜单\", primiseItem);\r\n      } else if (primiseItem.level === 3) {\r\n        this.$refs.AddPermissPopup.showDialog(\"添加按钮菜单\", primiseItem);\r\n      } else {\r\n        //level为4表示的是按钮权限,\r\n        this.$message.error(\"按钮权限不能在添加权限！！\");\r\n      }\r\n    },\r\n    //用于添加顶级菜单权限\r\n    addTopMenu() {\r\n      this.$refs.addTopPermissPopup.showDialog(\"添加顶级菜单\");\r\n    },\r\n    //用于编辑按钮或菜单\r\n    editPermissionNode(primiseItem) {\r\n      this.$refs.editPermissPopup.showDialog(\r\n        \"编辑菜单信息\",\r\n        primiseItem.menuId\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.permission_Tree {\r\n  width: 100%;\r\n  margin-left: 20px;\r\n\r\n  .permission_Header {\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n\r\n    .roleTitle {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .saveRoleBtn,\r\n    .editPermissionBtn {\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n\r\n  .permission_Content {\r\n    width: 50%;\r\n\r\n    .permission_Main {\r\n      width: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    .editPermission_Btn {\r\n      margin-left: 20px;\r\n    }\r\n\r\n    ::v-deep .el-tree-node__content {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 36px;\r\n    }\r\n\r\n    ::v-deep .el-checkbox__inner {\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n\r\n    ::v-deep .el-tree-node__label {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}