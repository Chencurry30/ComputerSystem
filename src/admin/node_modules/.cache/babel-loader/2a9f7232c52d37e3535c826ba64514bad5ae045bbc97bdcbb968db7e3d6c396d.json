{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getHomeCount } from '../../services/systemService';\nconst echarts = require('echarts/lib/echarts');\nrequire('echarts/lib/component/title');\nrequire('echarts/lib/component/tooltip');\nrequire('echarts/lib/component/legend');\nrequire('echarts/lib/chart/pie');\nexport default {\n  name: 'questionCard',\n  data() {\n    return {\n      questionTypeCount: [],\n      myChart: '',\n      option: {}\n    };\n  },\n  mounted() {\n    this.getCaedList();\n    // 基于准备好的dom，初始化echarts实例\n    this.myChart = echarts.init(this.$refs.questionCard);\n  },\n  methods: {\n    getHomeData() {\n      return new Promise((resolve, reject) => {\n        getHomeCount().then(res => {\n          this.questionTypeCount = [];\n          let value = [];\n          let list = res.data.data.questionTypeCount;\n          for (let i in list) {\n            value.push(list[i]);\n          }\n          this.questionTypeCount = value;\n          resolve(true);\n        }).catch(err => {\n          console.log(err);\n          reject(false);\n        });\n      });\n    },\n    //钩子执行的函数 \n    async getCaedList() {\n      await this.getHomeData();\n      //初始化option \n      this.option = {\n        title: {\n          text: '题库分类及数量',\n          subtext: '系统开发~~~至今',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: '60%',\n          data: [{\n            value: this.questionTypeCount[1],\n            name: '数学'\n          }, {\n            value: this.questionTypeCount[0],\n            name: '政治'\n          }, {\n            value: this.questionTypeCount[3],\n            name: '计网'\n          }, {\n            value: this.questionTypeCount[5],\n            name: '计组'\n          }, {\n            value: this.questionTypeCount[4],\n            name: '数据结构'\n          }],\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      this.myChart.setOption(this.option);\n      this.changeEchar();\n    },\n    //修改echars中的宽度,使其成为100 \n    changeEchar() {\n      let canvas = this.$refs.questionCard.firstChild;\n      canvas.style.width = 100 + '%';\n      canvas.querySelector('canvas').style.width = 100 + '%';\n    }\n  }\n};","map":{"version":3,"mappings":";AAMA;AACA;AACAA;AACAA;AACAA;AACAA;AACA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;EACAC;IACAC;MACA;QACAC;UACA;UACA;UACA;UACA;YACAC;UACA;UACA;UACAC;QACA,GACAC;UACAC;UACAC;QACA;MACA;IACA;IACA;IACA;MACA;MACA;MACA;QACAC;UACAC;UACAC;UACAC;QACA;QACAC;UACAC;QACA;QACAC;UACAC;UACAJ;QACA;QACAK,SACA;UACAtB;UACAuB;UACAC;UACAvB,OACA;YAAAQ;YAAAT;UAAA,GACA;YAAAS;YAAAT;UAAA,GACA;YAAAS;YAAAT;UAAA,GACA;YAAAS;YAAAT;UAAA,GACA;YAAAS;YAAAT;UAAA,EACA;UACAyB;YACAC;cACAC;cACAC;cACAC;YACA;UACA;QACA;MAEA;MACA;MAEA;IACA;IACA;IACAC;MACA;MACAC;MACAA;IACA;EAGA;AACA","names":["require","name","data","questionTypeCount","myChart","option","mounted","methods","getHomeData","getHomeCount","value","resolve","catch","console","reject","title","text","subtext","left","tooltip","trigger","legend","orient","series","type","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","changeEchar","canvas"],"sourceRoot":"src/components/HomeCard","sources":["questionCard.vue"],"sourcesContent":["<!--题目相关的可视化数据-->\r\n<template>\r\n  <div class=\"questionCard\" ref=\"questionCard\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { getHomeCount } from '../../services/systemService'\r\nconst echarts = require('echarts/lib/echarts');\r\nrequire('echarts/lib/component/title');\r\nrequire('echarts/lib/component/tooltip');\r\nrequire('echarts/lib/component/legend');\r\nrequire('echarts/lib/chart/pie');\r\nexport default {\r\n  name: 'questionCard',\r\n  data() {\r\n    return {\r\n      questionTypeCount: [],\r\n      myChart:'',\r\n      option:{},\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getCaedList()\r\n    // 基于准备好的dom，初始化echarts实例\r\n    this.myChart = echarts.init(this.$refs.questionCard);\r\n  },\r\n  methods: {\r\n    getHomeData() {\r\n      return new Promise((resolve, reject) => {\r\n        getHomeCount().then(res => {\r\n          this.questionTypeCount = []\r\n          let value = []\r\n          let list = res.data.data.questionTypeCount\r\n          for (let i in list) {\r\n            value.push(list[i])\r\n          }\r\n          this.questionTypeCount = value\r\n          resolve(true);\r\n        })\r\n          .catch(err => {\r\n            console.log(err);\r\n            reject(false)\r\n          })\r\n      })\r\n    },\r\n    //钩子执行的函数 \r\n    async getCaedList() {\r\n      await this.getHomeData()\r\n      //初始化option \r\n      this.option = {\r\n      title: {\r\n        text: '题库分类及数量',\r\n        subtext: '系统开发~~~至今',\r\n        left: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'item'\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left'\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Access From',\r\n          type: 'pie',\r\n          radius: '60%',\r\n          data: [\r\n            { value: this.questionTypeCount[1], name: '数学' },\r\n            { value: this.questionTypeCount[0], name: '政治' },\r\n            { value: this.questionTypeCount[3], name: '计网' },\r\n            { value: this.questionTypeCount[5], name: '计组' },\r\n            { value: this.questionTypeCount[4], name: '数据结构' }\r\n          ],\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n      };\r\n      this.myChart.setOption(this.option);\r\n\r\n      this.changeEchar()\r\n    },\r\n    //修改echars中的宽度,使其成为100 \r\n    changeEchar(){\r\n      let canvas = this.$refs.questionCard.firstChild\r\n      canvas.style.width = 100 + '%'\r\n      canvas.querySelector('canvas').style.width = 100 + '%'\r\n    }\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.questionCard {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #fff;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}