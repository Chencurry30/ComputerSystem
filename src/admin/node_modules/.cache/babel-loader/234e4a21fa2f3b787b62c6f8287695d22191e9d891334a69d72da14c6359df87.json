{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\n//引入进度条、样式\nimport Vue from 'vue';\nimport router from '../router';\nimport nProgress from 'nprogress';\nimport \"nprogress/nprogress.css\";\nconst baseurl = process.env.VUE_APP_BASE_TARGET;\nconst Service = axios.create({\n  baseURL: baseurl,\n  timeout: 10000,\n  headers: {\n    //请求头\n    'Content-Type': 'application/json;charset=UTF-8'\n  }\n});\n//请求拦截器\nService.interceptors.request.use(config => {\n  const token = sessionStorage.getItem('token');\n  if (token !== null) {\n    config.headers['token'] = token;\n  }\n  nProgress.start();\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n//响应拦截器\nService.interceptors.response.use(response => {\n  nProgress.done();\n  if (response.data.code === 401) {\n    //如果token验证失败，跳转到登录页面 \n    Vue.prototype.$message.error(response.data.message);\n    sessionStorage.removeItem('token');\n    router.push('/loginView');\n    return Promise.resolve(response);\n  } else {\n    return response;\n  }\n}, error => {\n  return Promise.reject(error);\n});\nexport default Service;","map":{"version":3,"names":["axios","Vue","router","nProgress","baseurl","process","env","VUE_APP_BASE_TARGET","Service","create","baseURL","timeout","headers","interceptors","request","use","config","token","sessionStorage","getItem","start","error","Promise","reject","response","done","data","code","prototype","$message","message","removeItem","push","resolve"],"sources":["E:/web项目/改版后台/computer_system/src/admin/src/services/service.js"],"sourcesContent":["import axios from 'axios'\r\n//引入进度条、样式\r\nimport Vue from 'vue';\r\nimport router from '../router';\r\nimport nProgress from 'nprogress';\r\nimport \"nprogress/nprogress.css\"\r\n\r\nconst baseurl = process.env.VUE_APP_BASE_TARGET\r\nconst Service = axios.create({\r\n    baseURL: baseurl,\r\n    timeout: 10000,\r\n    headers: {  //请求头\r\n      'Content-Type': 'application/json;charset=UTF-8',\r\n    }\r\n})\r\n//请求拦截器\r\nService.interceptors.request.use((config) => {\r\n  const token = sessionStorage.getItem('token')\r\n    if(token !== null){\r\n      config.headers['token'] = token;  \r\n    }\r\n    nProgress.start();\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n//响应拦截器\r\nService.interceptors.response.use((response) => {\r\n    nProgress.done();\r\n    if(response.data.code === 401){\r\n      //如果token验证失败，跳转到登录页面 \r\n      Vue.prototype.$message.error(response.data.message)\r\n      sessionStorage.removeItem('token')\r\n      router.push('/loginView')\r\n      return Promise.resolve(response)\r\n    }else{\r\n      return response\r\n    }\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n})\r\n\r\n\r\nexport default Service"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,GAAG,MAAM,KAAK;AACrB,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAO,yBAAyB;AAEhC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;AAC/C,MAAMC,OAAO,GAAGR,KAAK,CAACS,MAAM,CAAC;EACzBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IAAG;IACV,cAAc,EAAE;EAClB;AACJ,CAAC,CAAC;AACF;AACAJ,OAAO,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC3C,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAGF,KAAK,KAAK,IAAI,EAAC;IAChBD,MAAM,CAACJ,OAAO,CAAC,OAAO,CAAC,GAAGK,KAAK;EACjC;EACAd,SAAS,CAACiB,KAAK,EAAE;EACjB,OAAOJ,MAAM;AACjB,CAAC,EAAEK,KAAK,IAAI;EACR,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AACF;AACAb,OAAO,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAAES,QAAQ,IAAK;EAC5CrB,SAAS,CAACsB,IAAI,EAAE;EAChB,IAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,GAAG,EAAC;IAC5B;IACA1B,GAAG,CAAC2B,SAAS,CAACC,QAAQ,CAACR,KAAK,CAACG,QAAQ,CAACE,IAAI,CAACI,OAAO,CAAC;IACnDZ,cAAc,CAACa,UAAU,CAAC,OAAO,CAAC;IAClC7B,MAAM,CAAC8B,IAAI,CAAC,YAAY,CAAC;IACzB,OAAOV,OAAO,CAACW,OAAO,CAACT,QAAQ,CAAC;EAClC,CAAC,MAAI;IACH,OAAOA,QAAQ;EACjB;AACJ,CAAC,EAAGH,KAAK,IAAK;EACV,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AAGF,eAAeb,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}