{"ast":null,"code":"import { getLoglist, logDelete, logsDelete } from \"../../services/systemManage\";\nexport default {\n  name: \"MemberArchive\",\n  data() {\n    return {\n      //根据后端所川回的值\n      tableData: [{\n        logId: \"\",\n        username: \"\",\n        ip: \"\",\n        createDate: \"\",\n        type: \"\",\n        model: \"\",\n        result: \"\",\n        description: \"\",\n        total: \"\",\n        pageSize: \"\"\n      }],\n      total: 0,\n      //页面总条数\n      page: 1,\n      //请求第一次的params\n      pageSize: 0,\n      selections: []\n    };\n  },\n  mounted() {\n    this.getFollowdiaryList();\n  },\n  methods: {\n    //获取所有列表的信息\n    getFollowdiaryList() {\n      getLoglist(this.page).then(res => {\n        this.tableData = res.data.data.list; //后端返回的值赋值给页面\n        this.total = res.data.data.total; //后端返回的总数量\n        this.pageSize = res.data.data.pageSize; //后端放回每页总条数\n      });\n    },\n\n    //分页\n    handleCurrentChange(page) {\n      this.page = page;\n      this.getFollowdiaryList();\n    },\n    //删除列表\n    deleteROW(row) {\n      this.$confirm(\"此操作将永久删除该文件, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        logDelete(row.logId).then(() => {\n          this.$message({\n            message: \"删除用户成功！\",\n            type: \"success\"\n          });\n          this.getFollowdiaryList(); //更新列表\n        }).catch(() => {\n          console.log(\"错误捕获\");\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    //批量删除\n    deleteBtn(data) {\n      this.$confirm(\"此操作将永久删除该文件, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        logsDelete(data).then(() => {\n          this.$message({\n            message: \"删除用户成功！\",\n            type: \"success\"\n          });\n          this.getFollowdiaryList(); //更新列表\n        }).catch(() => {\n          console.log(\"错误捕获\");\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    deleteLog(val) {\n      this.selections = val;\n      // console.log(this.selections);\n    }\n  }\n};","map":{"version":3,"mappings":"AAsCA;AACA;EACAA;EACAC;IACA;MACA;MACAC,YACA;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,EACA;MACAD;MAAA;MACAE;MAAA;MACAD;MACAE;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;IACAC;MACAC;QACA;QACA;QACA;MACA;IACA;;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;QACAC;QACAC;QACAf;MACA,GACAgB;QACAC,qBACAD;UACA;YACAE;YACAlB;UACA;UACA;QACA,GACAmB;UACAC;QACA;MACA,GACAD;QACA;UACAnB;UACAkB;QACA;MACA;IACA;IACA;IACAG;MACA;QACAP;QACAC;QACAf;MACA,GACAgB;QACAM,iBACAN;UACA;YACAE;YACAlB;UACA;UACA;QACA,GACAmB;UACAC;QACA;MACA,GACAD;QACA;UACAnB;UACAkB;QACA;MACA;IACA;IACAK;MACA;MACA;IACA;EACA;AACA","names":["name","data","tableData","logId","username","ip","createDate","type","model","result","description","total","pageSize","page","selections","mounted","methods","getFollowdiaryList","getLoglist","handleCurrentChange","deleteROW","confirmButtonText","cancelButtonText","then","logDelete","message","catch","console","deleteBtn","logsDelete","deleteLog"],"sourceRoot":"src/views/systemManage","sources":["theLogManage.vue"],"sourcesContent":["<!--日志管理-->\r\n<template>\r\n  <div class=\"appMain\">\r\n    <div class=\"filter-container\">\r\n      <el-button class=\"filter-container-delete\" type=\"primary\" icon=\"el-icon-delete\" @click=\"deleteBtn(selections)\"\r\n        v-has=\"`system:log:delete`\">\r\n        批量删除\r\n      </el-button>\r\n    </div>\r\n    <!--主题-->`\r\n    <el-table :data=\"tableData\" style=\"width: 100%\" @selection-change=\"deleteLog\">\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n      <el-table-column prop=\"username\" label=\"用户名\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"ip\" label=\"ip\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"createDate\" label=\"事件时间\" width=\"190\"></el-table-column>\r\n      <el-table-column prop=\"type\" label=\"事件类型\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"model\" label=\"事件种类\"></el-table-column>\r\n      <el-table-column prop=\"result\" label=\"事件结果\"></el-table-column>\r\n      <el-table-column prop=\"description\" label=\"事件注释\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"150\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"danger\" icon=\"el-icon-delete\" circle size=\"mini\" @click=\"deleteROW(scope.row)\"\r\n            v-has=\"`system:log:delete`\"></el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 批量删除日志 -->\r\n\r\n    <!--分页表单-->\r\n    <el-pagination class=\"filter-page\" background layout=\"prev, pager, next\" :total=\"total\" :page-size=\"pageSize\"\r\n      @current-change=\"handleCurrentChange\">\r\n    </el-pagination>\r\n    <!--提示框的组件-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getLoglist, logDelete, logsDelete } from \"../../services/systemManage\";\r\nexport default {\r\n  name: \"MemberArchive\",\r\n  data() {\r\n    return {\r\n      //根据后端所川回的值\r\n      tableData: [\r\n        {\r\n          logId: \"\",\r\n          username: \"\",\r\n          ip: \"\",\r\n          createDate: \"\",\r\n          type: \"\",\r\n          model: \"\",\r\n          result: \"\",\r\n          description: \"\",\r\n          total: \"\",\r\n          pageSize: \"\",\r\n        },\r\n      ],\r\n      total: 0, //页面总条数\r\n      page: 1, //请求第一次的params\r\n      pageSize: 0,\r\n      selections: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getFollowdiaryList();\r\n  },\r\n  methods: {\r\n    //获取所有列表的信息\r\n    getFollowdiaryList() {\r\n      getLoglist(this.page).then((res) => {\r\n        this.tableData = res.data.data.list; //后端返回的值赋值给页面\r\n        this.total = res.data.data.total; //后端返回的总数量\r\n        this.pageSize = res.data.data.pageSize; //后端放回每页总条数\r\n      });\r\n    },\r\n    //分页\r\n    handleCurrentChange(page) {\r\n      this.page = page;\r\n      this.getFollowdiaryList();\r\n    },\r\n    //删除列表\r\n    deleteROW(row) {\r\n      this.$confirm(\"此操作将永久删除该文件, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          logDelete(row.logId)\r\n            .then(() => {\r\n              this.$message({\r\n                message: \"删除用户成功！\",\r\n                type: \"success\",\r\n              });\r\n              this.getFollowdiaryList(); //更新列表\r\n            })\r\n            .catch(() => {\r\n              console.log(\"错误捕获\");\r\n            });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\",\r\n          });\r\n        });\r\n    },\r\n    //批量删除\r\n    deleteBtn(data) {\r\n      this.$confirm(\"此操作将永久删除该文件, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          logsDelete(data)\r\n            .then(() => {\r\n              this.$message({\r\n                message: \"删除用户成功！\",\r\n                type: \"success\",\r\n              });\r\n              this.getFollowdiaryList(); //更新列表\r\n            })\r\n            .catch(() => {\r\n              console.log(\"错误捕获\");\r\n            });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\",\r\n          });\r\n        });\r\n    },\r\n    deleteLog(val) {\r\n      this.selections = val;\r\n      // console.log(this.selections);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.filter-container {\r\n  padding: 10px;\r\n  display: flex;\r\n\r\n  .filter-container-delete {\r\n    margin-right: 10px;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}