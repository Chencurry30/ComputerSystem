{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nVue.use(VueRouter);\nimport staticRoute from './static-route';\nimport { fnAddDynamicMenuRoutes, Routes } from './permission';\n//创建暴露路由\nconst router = new VueRouter({\n  routes: staticRoute,\n  mode: 'history' /*hash*/ /*不显示路由中的#*/\n});\n\nconst originalPush = VueRouter.prototype.push;\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(err => err);\n};\nconst originalReplace = VueRouter.prototype.replace;\nVueRouter.prototype.replace = function replace(location) {\n  return originalReplace.call(this, location).catch(err => err);\n};\nlet isToken = true;\nrouter.beforeEach(async (to, from, next) => {\n  if (to.name !== 'loginView' && !sessionStorage.getItem('token') && !sessionStorage.getItem('menulist')) next({\n    name: 'loginView'\n  });else next();\n  if (!sessionStorage.getItem('menulist')) {\n    // console.log(123);\n  }\n  //定义isToken为true和vuex不为空时添加路由\n  else if (isToken && sessionStorage.getItem('menulist').length !== 0) {\n    isToken = false; //将isToken赋为 false ，否则会一直循环，崩溃\n    const menuList = JSON.parse(sessionStorage.getItem('menulist'));\n    //分析出路由权限，淘汰掉按钮权限 \n    let childrenRoutes;\n    fnAddDynamicMenuRoutes(menuList, childrenRoutes);\n    let routelist = staticRoute[3].children;\n    Routes(menuList, routelist);\n    routelist = routelist.filter((item, index) => index > 1);\n    routelist.forEach(item => {\n      router.addRoute('indexBox', item);\n    });\n    next({\n      ...to,\n      // next({ ...to })的目的,是保证路由添加完了再进入页面 (可以理解为重进一次)\n      replace: true // 重进一次, 不保留重复历史\n    });\n  } else {\n    if (to.name == null) {\n      next(\"/404\");\n    } else {\n      if (to.meta.title) {\n        //判断是否有标题\n        document.title = to.meta.title; //给相应页面添加标题\n      }\n\n      next();\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","use","staticRoute","fnAddDynamicMenuRoutes","Routes","router","routes","mode","originalPush","prototype","push","location","call","catch","err","originalReplace","replace","isToken","beforeEach","to","from","next","name","sessionStorage","getItem","length","menuList","JSON","parse","childrenRoutes","routelist","children","filter","item","index","forEach","addRoute","meta","title","document"],"sources":["E:/web项目/改版后台/computer_system/src/admin/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router';\r\nVue.use(VueRouter)\r\nimport staticRoute from './static-route'\r\nimport { fnAddDynamicMenuRoutes, Routes } from './permission'\r\n//创建暴露路由\r\nconst router = new VueRouter({\r\n  routes : staticRoute,\r\n  mode: 'history',   /*hash*/ /*不显示路由中的#*/\r\n})\r\nconst originalPush = VueRouter.prototype.push\r\nVueRouter.prototype.push = function push(location) {\r\n  return originalPush.call(this, location).catch(err => err)\r\n}\r\n\r\nconst originalReplace = VueRouter.prototype.replace\r\nVueRouter.prototype.replace = function replace(location) {\r\n  return originalReplace.call(this, location).catch(err => err)\r\n}\r\n\r\nlet isToken = true\r\nrouter.beforeEach(async (to, from, next) => {\r\n  if(to.name !== 'loginView' && !sessionStorage.getItem('token') && !sessionStorage.getItem('menulist')) \r\n  next({name:'loginView'})\r\n  else next()\r\n  if(!sessionStorage.getItem('menulist')){\r\n    // console.log(123);\r\n  }\r\n  //定义isToken为true和vuex不为空时添加路由\r\n  else if(isToken && sessionStorage.getItem('menulist').length !== 0) {\r\n    isToken = false //将isToken赋为 false ，否则会一直循环，崩溃\r\n    const menuList = JSON.parse((sessionStorage.getItem('menulist')))\r\n    //分析出路由权限，淘汰掉按钮权限 \r\n    let childrenRoutes\r\n    fnAddDynamicMenuRoutes(menuList, childrenRoutes)\r\n    let routelist = staticRoute[3].children\r\n    Routes(menuList,routelist)\r\n    routelist = routelist.filter((item,index)=>index>1)\r\n    routelist.forEach((item) => {\r\n      router.addRoute('indexBox',item)\r\n    })\r\n    next({\r\n      ...to, // next({ ...to })的目的,是保证路由添加完了再进入页面 (可以理解为重进一次)\r\n      replace: true, // 重进一次, 不保留重复历史\r\n    })\r\n  } else {\r\n    if (to.name == null) {\r\n      next(\"/404\")\r\n    } else {\r\n      if (to.meta.title) { //判断是否有标题\r\n        document.title = to.meta.title //给相应页面添加标题\r\n      }\r\n      next()\r\n    }\r\n  }\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClCD,GAAG,CAACE,GAAG,CAACD,SAAS,CAAC;AAClB,OAAOE,WAAW,MAAM,gBAAgB;AACxC,SAASC,sBAAsB,EAAEC,MAAM,QAAQ,cAAc;AAC7D;AACA,MAAMC,MAAM,GAAG,IAAIL,SAAS,CAAC;EAC3BM,MAAM,EAAGJ,WAAW;EACpBK,IAAI,EAAE,SAAS,CAAI,SAAS;AAC9B,CAAC,CAAC;;AACF,MAAMC,YAAY,GAAGR,SAAS,CAACS,SAAS,CAACC,IAAI;AAC7CV,SAAS,CAACS,SAAS,CAACC,IAAI,GAAG,SAASA,IAAI,CAACC,QAAQ,EAAE;EACjD,OAAOH,YAAY,CAACI,IAAI,CAAC,IAAI,EAAED,QAAQ,CAAC,CAACE,KAAK,CAACC,GAAG,IAAIA,GAAG,CAAC;AAC5D,CAAC;AAED,MAAMC,eAAe,GAAGf,SAAS,CAACS,SAAS,CAACO,OAAO;AACnDhB,SAAS,CAACS,SAAS,CAACO,OAAO,GAAG,SAASA,OAAO,CAACL,QAAQ,EAAE;EACvD,OAAOI,eAAe,CAACH,IAAI,CAAC,IAAI,EAAED,QAAQ,CAAC,CAACE,KAAK,CAACC,GAAG,IAAIA,GAAG,CAAC;AAC/D,CAAC;AAED,IAAIG,OAAO,GAAG,IAAI;AAClBZ,MAAM,CAACa,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,IAAGF,EAAE,CAACG,IAAI,KAAK,WAAW,IAAI,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,CAACD,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,EACrGH,IAAI,CAAC;IAACC,IAAI,EAAC;EAAW,CAAC,CAAC,MACnBD,IAAI,EAAE;EACX,IAAG,CAACE,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,EAAC;IACrC;EAAA;EAEF;EAAA,KACK,IAAGP,OAAO,IAAIM,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAClER,OAAO,GAAG,KAAK,EAAC;IAChB,MAAMS,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAEL,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,CAAE;IACjE;IACA,IAAIK,cAAc;IAClB1B,sBAAsB,CAACuB,QAAQ,EAAEG,cAAc,CAAC;IAChD,IAAIC,SAAS,GAAG5B,WAAW,CAAC,CAAC,CAAC,CAAC6B,QAAQ;IACvC3B,MAAM,CAACsB,QAAQ,EAACI,SAAS,CAAC;IAC1BA,SAAS,GAAGA,SAAS,CAACE,MAAM,CAAC,CAACC,IAAI,EAACC,KAAK,KAAGA,KAAK,GAAC,CAAC,CAAC;IACnDJ,SAAS,CAACK,OAAO,CAAEF,IAAI,IAAK;MAC1B5B,MAAM,CAAC+B,QAAQ,CAAC,UAAU,EAACH,IAAI,CAAC;IAClC,CAAC,CAAC;IACFZ,IAAI,CAAC;MACH,GAAGF,EAAE;MAAE;MACPH,OAAO,EAAE,IAAI,CAAE;IACjB,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,IAAIG,EAAE,CAACG,IAAI,IAAI,IAAI,EAAE;MACnBD,IAAI,CAAC,MAAM,CAAC;IACd,CAAC,MAAM;MACL,IAAIF,EAAE,CAACkB,IAAI,CAACC,KAAK,EAAE;QAAE;QACnBC,QAAQ,CAACD,KAAK,GAAGnB,EAAE,CAACkB,IAAI,CAACC,KAAK,EAAC;MACjC;;MACAjB,IAAI,EAAE;IACR;EACF;AACF,CAAC,CAAC;AAEF,eAAehB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}