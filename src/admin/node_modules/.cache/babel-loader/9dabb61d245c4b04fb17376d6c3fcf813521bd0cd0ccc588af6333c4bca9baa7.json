{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//用于导出EXCLE的文件格式 \nimport * as XLSX from \"xlsx/xlsx.mjs\";\nimport * as $ from \"jquery\";\nconst exportExcle = {\n  tableTocsv(table) {\n    var csv = [];\n    $(table).find(\"tr\").each(function () {\n      var temp = [];\n      $(this).find(\"td\").each(function () {\n        temp.push($(this).html());\n      });\n      temp.shift();\n      csv.push(temp.join(','));\n    });\n    csv.shift();\n    return csv.join(\"\\n\");\n  },\n  //将csv格式转成 sheet对象\n  csvTosheet(csv) {\n    var sheet = {};\n    csv = csv.split(\"\\n\");\n    csv.forEach(function (row, i) {\n      row = row.split(\",\");\n      if (i == 0) sheet['!ref'] = \"A1:\" + String.fromCharCode(65 + row.length - 1) + (csv.length - 1);\n      row.forEach(function (col, j) {\n        sheet[String.fromCharCode(65 + j) + (i + 1)] = {\n          v: col\n        };\n      });\n    });\n    return sheet;\n  },\n  //将一个sheet对象转成最终的excel文件的blob对象 然后下载\n  sheetToblob(sheet, sheetName) {\n    sheetName = sheetName || \"sheet1\";\n    var workbook = {\n      SheetNames: [sheetName],\n      Sheets: {}\n    };\n    workbook.Sheets[sheetName] = sheet;\n    //生成excel的配置项\n    var wopts = {\n      bookType: \"xlsx\",\n      bookSST: false,\n      type: \"binary\"\n    };\n    var wbout = XLSX.write(workbook, wopts);\n    var blob = new Blob([sab(wbout)], {\n      type: \"application/octet-stream\"\n    });\n    //把字符串转化成 arrayBuffer(类型化数组)\n    function sab(s) {\n      var buf = new ArrayBuffer(s.length);\n      var view = new Uint8Array(buf);\n      for (var i = 0; i != s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n      return buf;\n    }\n    return blob;\n  },\n  //通用的打开下载对话框方法\n  openDownloadDialog(url, saveName) {\n    if (typeof url == \"object\" && url instanceof Blob) {\n      url = URL.createObjectURL(url); //创建blob地址\n    }\n\n    var aLink = document.createElement(\"a\");\n    aLink.href = url;\n    aLink.download = saveName || \"\";\n    var event;\n    if (window.MouseEvent) event = new MouseEvent(\"click\");else {\n      event = document.createEvent(\"MouseEvents\");\n      event.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n    }\n    //触发事件\n    aLink.dispatchEvent(event);\n  }\n};\nexport default exportExcle;","map":{"version":3,"names":["XLSX","$","exportExcle","tableTocsv","table","csv","find","each","temp","push","html","shift","join","csvTosheet","sheet","split","forEach","row","i","String","fromCharCode","length","col","j","v","sheetToblob","sheetName","workbook","SheetNames","Sheets","wopts","bookType","bookSST","type","wbout","write","blob","Blob","sab","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","openDownloadDialog","url","saveName","URL","createObjectURL","aLink","document","createElement","href","download","event","window","MouseEvent","createEvent","initMouseEvent","dispatchEvent"],"sources":["E:/web项目/改版后台/computer_system/src/admin/src/utils/exportExcle.js"],"sourcesContent":["//用于导出EXCLE的文件格式 \r\nimport * as XLSX from \"xlsx/xlsx.mjs\"\r\nimport * as $ from \"jquery\"\r\nconst exportExcle = {\r\n  tableTocsv(table) {\r\n    var csv = [];\r\n    $(table).find(\"tr\").each(function () {\r\n      var temp = [];\r\n      $(this).find(\"td\").each(function () {\r\n        temp.push($(this).html())\r\n      })\r\n      temp.shift()\r\n      csv.push(temp.join(','))\r\n    })\r\n    csv.shift()\r\n    return csv.join(\"\\n\");\r\n  },\r\n  //将csv格式转成 sheet对象\r\n  csvTosheet(csv) {\r\n    var sheet = {};\r\n    csv = csv.split(\"\\n\");\r\n    csv.forEach(function (row, i) {\r\n      row = row.split(\",\");\r\n      if (i == 0) sheet['!ref'] = \"A1:\" + String.fromCharCode(65 + row.length - 1) + (csv.length - 1);\r\n      row.forEach(function (col, j) {\r\n        sheet[String.fromCharCode(65 + j) + (i + 1)] = { v: col };\r\n      })\r\n    })\r\n    return sheet;\r\n  },\r\n  //将一个sheet对象转成最终的excel文件的blob对象 然后下载\r\n  sheetToblob(sheet, sheetName) {\r\n    sheetName = sheetName || \"sheet1\"\r\n    var workbook = {\r\n      SheetNames: [sheetName],\r\n      Sheets: {}\r\n    }\r\n    workbook.Sheets[sheetName] = sheet;\r\n    //生成excel的配置项\r\n    var wopts = {\r\n      bookType: \"xlsx\",\r\n      bookSST: false,\r\n      type: \"binary\"\r\n    }\r\n    var wbout = XLSX.write(workbook, wopts);\r\n    var blob = new Blob([sab(wbout)], { type: \"application/octet-stream\" });\r\n    //把字符串转化成 arrayBuffer(类型化数组)\r\n    function sab(s) {\r\n      var buf = new ArrayBuffer(s.length);\r\n      var view = new Uint8Array(buf);\r\n      for (var i = 0; i != s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\r\n      return buf\r\n    }\r\n    return blob\r\n  },\r\n  //通用的打开下载对话框方法\r\n  openDownloadDialog(url, saveName) {\r\n    if (typeof url == \"object\" && url instanceof Blob) {\r\n      url = URL.createObjectURL(url); //创建blob地址\r\n    }\r\n    var aLink = document.createElement(\"a\");\r\n    aLink.href = url;\r\n    aLink.download = saveName || \"\";\r\n    var event;\r\n    if (window.MouseEvent) event = new MouseEvent(\"click\");\r\n    else {\r\n      event = document.createEvent(\"MouseEvents\");\r\n      event.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n    }\r\n    //触发事件\r\n    aLink.dispatchEvent(event)\r\n  },\r\n}\r\nexport default exportExcle\r\n\r\n"],"mappings":";AAAA;AACA,OAAO,KAAKA,IAAI,MAAM,eAAe;AACrC,OAAO,KAAKC,CAAC,MAAM,QAAQ;AAC3B,MAAMC,WAAW,GAAG;EAClBC,UAAU,CAACC,KAAK,EAAE;IAChB,IAAIC,GAAG,GAAG,EAAE;IACZJ,CAAC,CAACG,KAAK,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC,YAAY;MACnC,IAAIC,IAAI,GAAG,EAAE;MACbP,CAAC,CAAC,IAAI,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC,YAAY;QAClCC,IAAI,CAACC,IAAI,CAACR,CAAC,CAAC,IAAI,CAAC,CAACS,IAAI,EAAE,CAAC;MAC3B,CAAC,CAAC;MACFF,IAAI,CAACG,KAAK,EAAE;MACZN,GAAG,CAACI,IAAI,CAACD,IAAI,CAACI,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC;IACFP,GAAG,CAACM,KAAK,EAAE;IACX,OAAON,GAAG,CAACO,IAAI,CAAC,IAAI,CAAC;EACvB,CAAC;EACD;EACAC,UAAU,CAACR,GAAG,EAAE;IACd,IAAIS,KAAK,GAAG,CAAC,CAAC;IACdT,GAAG,GAAGA,GAAG,CAACU,KAAK,CAAC,IAAI,CAAC;IACrBV,GAAG,CAACW,OAAO,CAAC,UAAUC,GAAG,EAAEC,CAAC,EAAE;MAC5BD,GAAG,GAAGA,GAAG,CAACF,KAAK,CAAC,GAAG,CAAC;MACpB,IAAIG,CAAC,IAAI,CAAC,EAAEJ,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,GAAGK,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGH,GAAG,CAACI,MAAM,GAAG,CAAC,CAAC,IAAIhB,GAAG,CAACgB,MAAM,GAAG,CAAC,CAAC;MAC/FJ,GAAG,CAACD,OAAO,CAAC,UAAUM,GAAG,EAAEC,CAAC,EAAE;QAC5BT,KAAK,CAACK,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGG,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;UAAEM,CAAC,EAAEF;QAAI,CAAC;MAC3D,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAOR,KAAK;EACd,CAAC;EACD;EACAW,WAAW,CAACX,KAAK,EAAEY,SAAS,EAAE;IAC5BA,SAAS,GAAGA,SAAS,IAAI,QAAQ;IACjC,IAAIC,QAAQ,GAAG;MACbC,UAAU,EAAE,CAACF,SAAS,CAAC;MACvBG,MAAM,EAAE,CAAC;IACX,CAAC;IACDF,QAAQ,CAACE,MAAM,CAACH,SAAS,CAAC,GAAGZ,KAAK;IAClC;IACA,IAAIgB,KAAK,GAAG;MACVC,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE;IACR,CAAC;IACD,IAAIC,KAAK,GAAGlC,IAAI,CAACmC,KAAK,CAACR,QAAQ,EAAEG,KAAK,CAAC;IACvC,IAAIM,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACC,GAAG,CAACJ,KAAK,CAAC,CAAC,EAAE;MAAED,IAAI,EAAE;IAA2B,CAAC,CAAC;IACvE;IACA,SAASK,GAAG,CAACC,CAAC,EAAE;MACd,IAAIC,GAAG,GAAG,IAAIC,WAAW,CAACF,CAAC,CAAClB,MAAM,CAAC;MACnC,IAAIqB,IAAI,GAAG,IAAIC,UAAU,CAACH,GAAG,CAAC;MAC9B,KAAK,IAAItB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqB,CAAC,CAAClB,MAAM,EAAEH,CAAC,EAAE,EAAEwB,IAAI,CAACxB,CAAC,CAAC,GAAGqB,CAAC,CAACK,UAAU,CAAC1B,CAAC,CAAC,GAAG,IAAI;MACpE,OAAOsB,GAAG;IACZ;IACA,OAAOJ,IAAI;EACb,CAAC;EACD;EACAS,kBAAkB,CAACC,GAAG,EAAEC,QAAQ,EAAE;IAChC,IAAI,OAAOD,GAAG,IAAI,QAAQ,IAAIA,GAAG,YAAYT,IAAI,EAAE;MACjDS,GAAG,GAAGE,GAAG,CAACC,eAAe,CAACH,GAAG,CAAC,CAAC,CAAC;IAClC;;IACA,IAAII,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACvCF,KAAK,CAACG,IAAI,GAAGP,GAAG;IAChBI,KAAK,CAACI,QAAQ,GAAGP,QAAQ,IAAI,EAAE;IAC/B,IAAIQ,KAAK;IACT,IAAIC,MAAM,CAACC,UAAU,EAAEF,KAAK,GAAG,IAAIE,UAAU,CAAC,OAAO,CAAC,CAAC,KAClD;MACHF,KAAK,GAAGJ,QAAQ,CAACO,WAAW,CAAC,aAAa,CAAC;MAC3CH,KAAK,CAACI,cAAc,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAEH,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;IACxG;IACA;IACAN,KAAK,CAACU,aAAa,CAACL,KAAK,CAAC;EAC5B;AACF,CAAC;AACD,eAAerD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}